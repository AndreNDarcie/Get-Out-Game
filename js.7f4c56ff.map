{"version":3,"sources":["js/entities/Character.js","js/Globals.js","js/managers/CampManager.js","js/entities/Event.js","js/managers/EventManager.js","js/managers/GameOverManager.js","js/managers/StatsManager.js","js/managers/CharacterManager.js","js/managers/TravelManager.js","js/managers/LogManager.js","js/GameManager.js","js/index.js"],"names":["Character","name","health","kinship","sick","hungry","cold","isDead","healthToLoose","tempLogs","push","Globals","currentDay","gameStates","TRAVEL","CAMP","STATS","EVENT","GAME_OVER","currentState","hours","characters","travelledDistance","distanceToGoal","logs","gamePages","travelPage","document","getElementById","campPage","statsPage","eventPage","gameOverPage","CampManager","game","campImg","querySelector","travelBtn","statsBtn","sleepBtn","huntBtn","healBtn","addEventListener","e","onClickTravel","onClickStats","goToState","SLEEP","HUNT","HEAL","Event","description","type","EventManager","reportPage","eventPageTitle","eventPageDescription","eventPageImage","eventPageYesBtn","eventPageNoBtn","onEventPageYesBtn","onEventPageNoBtn","events","randomIndex","getRandomArbitrary","length","event","showEvent","innerHTML","randomCharacterIndex","randomCharacter","looseHealth","log","start","max","Math","floor","random","GameOverManager","gameOverMessage","livingCharacters","i","setGameOverMessage","message","StatsManager","currentCharacterIndex","getPageElements","showCharacters","nameField","healthField","atributesField","backCharacterBtn","onClickBackCharacter","entries","index","character","CharacterManager","every","TravelManager","travelImage","travelledDistanceField","currentTimeField","progressBar","walkBtn","campBtn","onClickWalk","onClickCamp","characterManager","showTravelledDistance","showTime","showLogs","startWalking","passHours","checkEvent","clearLogs","walking","gotoNextHour","walkOneHour","gotoNextDay","min","increaseProgressBar","passOneHour","checkIfAllCharactersAreDead","arrivedAtTheGoal","progressBarFullWidth","unity","style","width","x","stopWalking","LogManager","logList","GameManager","states","pages","camp","gameOver","stats","travel","hideAllPages","showPage","evt","state","setState","page","display","hidePage","LOG"],"mappings":"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","file":"js.7f4c56ff.map","sourceRoot":"..","sourcesContent":["import { Globals } from \"../Globals\";\r\n\r\nexport class Character {\r\n    \r\n    constructor(name, health, kinship, sick, hungry, cold) {\r\n        this.name = name;\r\n        this.health = health;\r\n        this.kinship = kinship;\r\n        this.isDead = false;\r\n        this.sick = sick;\r\n        this.hungry = hungry;\r\n        this.cold = cold;\r\n    }\r\n\r\n    looseHealth(healthToLoose) {\r\n\r\n        if (this.health > 0) {\r\n            this.health -= healthToLoose;\r\n\r\n            if (this.health <= 0) {\r\n                this.health = 0;\r\n                Globals.tempLogs.push(this.name + ' died at day ' + Globals.currentDay);\r\n                this.isDead = true;\r\n            } else {\r\n                Globals.tempLogs.push(this.name + ' lost -' + healthToLoose + ' health');\r\n            }\r\n        }\r\n    }\r\n}","import { Character } from '/js/entities/Character.js';\r\n\r\nexport let Globals = {\r\n    gameStates: {\r\n        TRAVEL: 1,\r\n        CAMP: 2,\r\n        STATS: 3,\r\n        EVENT: 4,\r\n        GAME_OVER: 5\r\n    },\r\n    currentState: 1,\r\n    currentDay: 0,\r\n    hours: 0,\r\n    characters: [],\r\n    travelledDistance: 0,\r\n    distanceToGoal: 300,\r\n    tempLogs: [],\r\n    logs: [],\r\n    gamePages: {\r\n        travelPage: document.getElementById(\"travel-page\"),\r\n        campPage: document.getElementById(\"camp-page\"),\r\n        statsPage: document.getElementById(\"stats-page\"),\r\n        eventPage: document.getElementById(\"event-page\"),\r\n        gameOverPage: document.getElementById(\"game-over-page\"),\r\n    }\r\n}\r\n\r\nGlobals.characters.push(new Character('Ethan', 5, 'father', true, false, false));\r\nGlobals.characters.push(new Character('Olivia', 5, 'mother', false, true, true));\r\nGlobals.characters.push(new Character('Michael', 5, 'son', true, true, true));\r\nGlobals.characters.push(new Character('Sophia', 5, 'daughter', false, false, false));\r\nGlobals.characters.push(new Character('Emma', 5, 'grandmother', true, true, false));","import { Globals } from '../Globals.js';\r\n\r\nexport class CampManager {\r\n\r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.campImg = document.querySelector(\"#camp-img\");\r\n        this.travelBtn = document.querySelector(\"#travel-btn\");\r\n        this.statsBtn = document.querySelector(\"#stats-btn\");\r\n        this.sleepBtn = document.querySelector(\"#sleep-btn\");\r\n        this.huntBtn = document.querySelector(\"#hunt-btn\");\r\n        this.healBtn = document.querySelector(\"#heal-btn\");\r\n\r\n        this.travelBtn.addEventListener('click', (e) => { this.onClickTravel(e) });\r\n        this.statsBtn.addEventListener('click', (e) => { this.onClickStats(e) });\r\n    }\r\n\r\n    start() {\r\n        \r\n    } \r\n\r\n    onClickTravel() {\r\n        this.game.goToState(Globals.gameStates.TRAVEL);\r\n    }\r\n\r\n    onClickStats() {\r\n        this.game.goToState(Globals.gameStates.STATS);\r\n    }\r\n\r\n    onClickSleep() {\r\n        this.game.goToState(Globals.gameStates.SLEEP);\r\n    }\r\n\r\n    onClickHunt() {\r\n        this.game.goToState(Globals.gameStates.HUNT);\r\n    }\r\n\r\n    onClickHeal() {\r\n        this.game.goToState(Globals.gameStates.HEAL);\r\n    }\r\n}","import { Globals } from '../Globals.js';\r\n\r\nexport class Event {\r\n\r\n    constructor(name, description, type) {\r\n        this.name = name;\r\n        this.description = description;\r\n        this.type = type;\r\n    }\r\n}","import { Event } from '../entities/Event.js';\r\nimport { Globals } from '../Globals.js';\r\n\r\nexport class EventManager {\r\n\r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.reportPage = document.getElementById(\"report-page\");\r\n        this.eventPageTitle = document.getElementById(\"event-page-title\");\r\n        this.eventPageDescription = document.getElementById(\"event-page-description\");\r\n        this.eventPageImage = document.getElementById(\"event-page-image\");\r\n        this.eventPageYesBtn = document.getElementById(\"event-page-yes-btn\");\r\n        this.eventPageNoBtn = document.getElementById(\"event-page-no-btn\");\r\n\r\n        this.eventPageYesBtn.addEventListener('click', (e) => { this.onEventPageYesBtn(e) });\r\n        this.eventPageNoBtn.addEventListener('click', (e) => { this.onEventPageNoBtn(e) });\r\n    }\r\n\r\n    start() {\r\n        let events = [new Event(\"Abandoned house\", \"No sign of life. Explore the house?\", \"exploration\"), \r\n                      new Event(\"Wild Wolf Appeared\", \"Fight with the wolf?\", \"combat\")];\r\n        let randomIndex = this.getRandomArbitrary(events.length);\r\n\r\n        this.event = events[randomIndex];\r\n\r\n        this.showEvent();\r\n    }\r\n\r\n    showEvent() {\r\n        this.eventPageTitle.innerHTML = this.event.name;\r\n        this.eventPageDescription.innerHTML = this.event.description;\r\n    }\r\n\r\n    onEventPageYesBtn(e) {\r\n        let randomCharacterIndex = this.getRandomArbitrary(Globals.characters.length);\r\n        let randomCharacter = Globals.characters[randomCharacterIndex];\r\n        switch (this.event.type) {\r\n            case \"exploration\":\r\n                Globals.tempLogs.push(randomCharacter.name + ' found food!');\r\n                break;\r\n            case \"combat\":\r\n                randomCharacter.looseHealth(1);\r\n                break;\r\n        }\r\n\r\n        if (Globals.tempLogs.length > 0) {\r\n            this.game.log.start();\r\n        }\r\n\r\n        this.game.goToState(Globals.gameStates.TRAVEL);\r\n    }\r\n\r\n    onEventPageNoBtn(e) {\r\n\r\n        if (Globals.tempLogs.length > 0) {\r\n            this.game.log.start();\r\n        } else {\r\n            this.game.goToState(Globals.gameStates.TRAVEL);\r\n        }\r\n    }\r\n\r\n    getRandomArbitrary(max) {\r\n        return Math.floor(Math.random() * max) \r\n    }\r\n}","import { Globals } from '../Globals.js';\r\n\r\nexport class GameOverManager {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.gameOverMessage = document.querySelector(\"#game-over-message\");\r\n    }\r\n\r\n    start() {\r\n\r\n        let livingCharacters = 0;\r\n\r\n        for (var i = 0; i < Globals.characters.length; i++){\r\n            const character = Globals.characters[i];\r\n\r\n            if (character.health > 0) {\r\n                livingCharacters++;\r\n            }\r\n        }\r\n\r\n        this.setGameOverMessage(livingCharacters + \" of \" + Globals.characters.length + \" survived!\");\r\n    }\r\n\r\n    setGameOverMessage(message) {\r\n        this.gameOverMessage.innerHTML = message;\r\n    }\r\n}","import { Globals } from '../Globals.js';\r\n\r\nexport class StatsManager {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n        this.currentCharacterIndex = 0;\r\n        this.characters = [];\r\n\r\n        this.getPageElements();\r\n    }\r\n\r\n    start() {\r\n        this.showCharacters();\r\n    }\r\n\r\n    getPageElements() {\r\n        \r\n        this.characters[0] = {};\r\n        this.characters[0].nameField = document.querySelector(\"#first-character-name-field\");\r\n        this.characters[0].healthField = document.querySelector(\"#first-character-health-field\");\r\n        this.characters[0].atributesField = document.querySelector(\"#first-character-atributes-field\");\r\n\r\n        this.characters[1] = {};\r\n        this.characters[1].nameField = document.querySelector(\"#second-character-name-field\");\r\n        this.characters[1].healthField = document.querySelector(\"#second-character-health-field\");\r\n        this.characters[1].atributesField = document.querySelector(\"#second-character-atributes-field\");\r\n\r\n        this.characters[2] = {};\r\n        this.characters[2].nameField = document.querySelector(\"#third-character-name-field\");\r\n        this.characters[2].healthField = document.querySelector(\"#third-character-health-field\");\r\n        this.characters[2].atributesField = document.querySelector(\"#third-character-atributes-field\");\r\n\r\n        this.characters[3] = {};\r\n        this.characters[3].nameField = document.querySelector(\"#fourth-character-name-field\");\r\n        this.characters[3].healthField = document.querySelector(\"#fourth-character-health-field\");\r\n        this.characters[3].atributesField = document.querySelector(\"#fourth-character-atributes-field\");\r\n\r\n        this.characters[4] = {};\r\n        this.characters[4].nameField = document.querySelector(\"#fifth-character-name-field\");\r\n        this.characters[4].healthField = document.querySelector(\"#fifth-character-health-field\");\r\n        this.characters[4].atributesField = document.querySelector(\"#fifth-character-atributes-field\");\r\n\r\n        this.backCharacterBtn = document.querySelector(\"#back-character-btn\");\r\n\r\n        this.backCharacterBtn.addEventListener('click', (e) => { this.onClickBackCharacter(e) });\r\n    }\r\n\r\n    showCharacters() {\r\n        let characters = Globals.characters;\r\n\r\n        for (let [index, character] of characters.entries()){\r\n            this.characters[index].nameField.innerHTML = character.name + ' - ' + character.kinship;\r\n            this.characters[index].healthField.innerHTML = character.isDead\r\n                                                        ? 'Is Dead'\r\n                                                        : 'Health: ' + character.health;\r\n            this.characters[index].atributesField.innerHTML = (character.sick ? ' [SICK] ' : '') +\r\n                                                              (character.hungry ? ' [HUNGRY] ' : '') +\r\n                                                              (character.cold ? ' [COLD] ' : '');\r\n        }\r\n    }\r\n\r\n    onClickBackCharacter() {\r\n        this.game.goToState(Globals.gameStates.TRAVEL);\r\n    }\r\n}","import { Globals } from '../Globals.js';\r\n\r\nexport class CharacterManager {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    checkIfAllCharactersAreDead() {\r\n        let characters = Globals.characters;\r\n\r\n        return characters.every((character) => character.isDead);\r\n    }\r\n}","import { Globals } from '../Globals.js';\r\nimport { CharacterManager } from './CharacterManager.js';\r\n\r\nexport class TravelManager {\r\n\r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.travelPage = document.querySelector(\"#travel-page\");\r\n        this.travelImage = document.querySelector(\"#travel-img\");\r\n        this.travelledDistanceField = document.querySelector(\"#travelled-distance\");\r\n        this.currentTimeField = document.querySelector(\"#current-time-field\");\r\n        this.progressBar = document.querySelector(\"#progress-bar\");\r\n        this.walkBtn = document.querySelector(\"#walk-btn\");\r\n        this.campBtn = document.querySelector(\"#camp-btn\");\r\n\r\n        this.walkBtn.addEventListener('click', (e) => { this.onClickWalk(e) });\r\n        this.campBtn.addEventListener('click', (e) => { this.onClickCamp(e) });\r\n        \r\n        this.characterManager = new CharacterManager();\r\n        this.showTravelledDistance();\r\n    }\r\n\r\n    start() {\r\n        Globals.currentDay++;\r\n        this.showTime();\r\n        this.game.log.showLogs();\r\n    }\r\n\r\n    onClickWalk(e) {\r\n        this.startWalking();\r\n        this.passHours(3);\r\n\r\n        const foundEvent = this.checkEvent();\r\n\r\n        if (foundEvent) {\r\n            this.game.goToState(Globals.gameStates.EVENT);\r\n        } else if (Globals.tempLogs.length > 0) {\r\n            this.game.log.showLogs();\r\n        } else {\r\n            this.game.log.clearLogs();\r\n        }\r\n    }\r\n\r\n    onClickCamp(e) {\r\n        this.game.goToState(Globals.gameStates.CAMP);\r\n    }\r\n\r\n    passHours(hours) {\r\n        for (let i = 0; i < hours; i++) {\r\n\r\n            if (!this.walking)\r\n                break;\r\n\r\n            this.gotoNextHour();\r\n        }\r\n    }\r\n\r\n    gotoNextHour() {\r\n        this.walkOneHour();\r\n\r\n        if (Globals.hours >= 24 ) {\r\n            Globals.hours = 0;\r\n            this.gotoNextDay();\r\n        }\r\n        this.showTime();\r\n    }\r\n\r\n    checkEvent() {\r\n        return this.getRandomArbitrary(1, 100) <= 25;\r\n    }\r\n\r\n    getRandomArbitrary(min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    gotoNextDay() {\r\n        Globals.currentDay++;\r\n        this.showTime();\r\n    }\r\n\r\n    passOneHour() {\r\n        Globals.hours++;\r\n        this.showTime();\r\n    }\r\n\r\n    showTime() {\r\n        this.currentTimeField.innerHTML = Globals.hours + ':00 - day ' + Globals.currentDay;\r\n\r\n        if(Globals.hours >= 18 || Globals.hours <= 6) {\r\n            this.currentTimeField.innerHTML += ' - night';\r\n        } else {\r\n            this.currentTimeField.innerHTML += ' - daylight';\r\n        }\r\n    }\r\n\r\n    walkOneHour() {\r\n        \r\n        Globals.travelledDistance += 2;\r\n        this.increaseProgressBar();\r\n\r\n        this.showTravelledDistance();\r\n        this.passOneHour();\r\n\r\n        let allPlayerAreDead = this.characterManager.checkIfAllCharactersAreDead();\r\n        if (allPlayerAreDead) \r\n            this.game.goToState(Globals.gameStates.GAME_OVER);\r\n        \r\n        if(Globals.travelledDistance > Globals.distanceToGoal) {\r\n            this.arrivedAtTheGoal();\r\n        }\r\n    }\r\n\r\n    increaseProgressBar() {\r\n        let progressBarFullWidth = 321;\r\n        let unity = progressBarFullWidth / Globals.distanceToGoal;\r\n        this.progressBar.style.width = Globals.travelledDistance * unity + 'px';\r\n    }\r\n\r\n    getRandomCharacter() {\r\n        let x = Math.floor(Math.random() * (Globals.characters.length));\r\n        return x;\r\n    }\r\n\r\n    showTravelledDistance() {\r\n        this.travelledDistanceField.innerHTML = 'Travelled distance: ' + Globals.travelledDistance + ' miles';\r\n    }\r\n\r\n    startWalking() {\r\n        this.walking = true;\r\n    }\r\n\r\n    stopWalking() {\r\n        this.walking = false;\r\n    }\r\n\r\n    arrivedAtTheGoal() {\r\n        this.stopWalking();\r\n        this.game.goToState(Globals.gameStates.GAME_OVER);\r\n    }\r\n}","import { Globals } from '../Globals.js';\r\n\r\nexport class LogManager {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n        this.logList = document.querySelector(\"#log-list\");\r\n    }\r\n\r\n    start() {\r\n        this.showLogs();\r\n    }\r\n\r\n    showLogs() {\r\n        if(Globals.tempLogs.length <= 0) return;\r\n\r\n        let logs = \"\";\r\n\r\n        for (var i = 0; i < Globals.tempLogs.length; i++) {\r\n            logs += \"<li>\" + Globals.tempLogs[i] + \"</li>\";\r\n        }\r\n\r\n        Globals.logs = Globals.tempLogs;\r\n        Globals.tempLogs = [];\r\n\r\n        this.logList.innerHTML = logs;\r\n    }\r\n\r\n    clearLogs() {\r\n        this.logList.innerHTML = '';\r\n    }\r\n}","import { Globals } from './Globals.js';\r\nimport { CampManager } from './managers/CampManager.js';\r\nimport { EventManager } from './managers/EventManager.js';\r\nimport { GameOverManager } from './managers/GameOverManager.js';\r\nimport { StatsManager } from './managers/StatsManager.js';\r\nimport { TravelManager } from './managers/TravelManager.js';\r\nimport { LogManager } from './managers/LogManager.js';\r\n\r\nexport class GameManager {\r\n\r\n    constructor() {\r\n        this.states = Globals.gameStates;\r\n        this.pages = Globals.gamePages;\r\n\r\n        this.camp = new CampManager(this);\r\n        this.events = new EventManager(this);\r\n        this.gameOver = new GameOverManager(this);\r\n        this.stats = new StatsManager(this);\r\n        this.travel = new TravelManager(this);\r\n        this.log = new LogManager(this);\r\n    }\r\n\r\n    start() {\r\n        var gamePages = Globals.gamePages;\r\n    \r\n        this.hideAllPages();\r\n        this.showPage(gamePages.campPage);\r\n    }\r\n\r\n    onClick(evt) {\r\n        this.goToState(this.states.TRAVEL);\r\n    }\r\n\r\n    goToState(state) {\r\n\r\n        if (!state) throw \"Invalid state!\";\r\n\r\n        Globals.currentState = state;\r\n        this.setState();\r\n    }\r\n\r\n    showPage(page) {\r\n        page.style.display = \"block\";\r\n    }\r\n\r\n    hidePage(page) {\r\n        page.style.display = \"none\";\r\n    }\r\n\r\n    hideAllPages() {\r\n\r\n        var gamePages = Globals.gamePages;\r\n    \r\n        this.hidePage(gamePages.travelPage);\r\n        this.hidePage(gamePages.campPage);\r\n        this.hidePage(gamePages.statsPage);\r\n        this.hidePage(gamePages.eventPage);\r\n        this.hidePage(gamePages.gameOverPage);\r\n    }\r\n\r\n    setState() {\r\n\r\n        const gamePages = Globals.gamePages;\r\n        const gameStates = Globals.gameStates;\r\n\r\n        this.hideAllPages();\r\n\r\n        switch(Globals.currentState) {\r\n            case gameStates.TRAVEL: \r\n                this.showPage(gamePages.travelPage);\r\n                this.travel.start();\r\n            break;\r\n            case gameStates.CAMP: \r\n                this.showPage(gamePages.campPage);\r\n                this.camp.start();\r\n            break;\r\n            case gameStates.STATS: \r\n                this.showPage(gamePages.statsPage);\r\n                this.stats.start();\r\n            break;\r\n            case gameStates.EVENT: \r\n                this.showPage(gamePages.eventPage);\r\n                this.events.start();\r\n            break;\r\n            case gameStates.LOG:\r\n                this.log.start();\r\n            break;\r\n            case gameStates.GAME_OVER:\r\n                this.showPage(gamePages.gameOverPage);\r\n                this.gameOver.start();\r\n            break;\r\n        }\r\n    }\r\n}","import { GameManager } from './GameManager.js';\r\n\r\nconst game = new GameManager();\r\ngame.start();\r\n"]}