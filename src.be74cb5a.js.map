{"version":3,"sources":["src/managers/CampManager.ts","src/entities/Event.ts","src/entities/Item.ts","src/managers/EventManager.ts","src/managers/GameOverManager.ts","src/managers/StatsManager.ts","src/managers/TravelManager.ts","src/managers/LogManager.ts","src/managers/BagManager.ts","src/entities/Character.ts","src/managers/CharacterManager.ts","src/entities/Clock.ts","src/Game.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.be74cb5a.js","sourceRoot":"..","sourcesContent":["import { Game, GameStates } from '../Game';\r\n\r\nexport class CampManager {\r\n    private _campImg: Element;\r\n    private _travelBtn: Element;\r\n    private _bagBtn: Element;\r\n    \r\n    constructor() {\r\n        this._campImg = document.querySelector('#camp-img');\r\n        this._travelBtn = document.querySelector('#travel-btn');\r\n        this._bagBtn = document.querySelector('#bag-btn');\r\n\r\n        this._travelBtn.addEventListener('click', () => { this.onClickTravel() });\r\n        this._bagBtn.addEventListener('click', () => { this.onClickBag() });\r\n    }\r\n\r\n    start() {\r\n    } \r\n\r\n    onClickTravel() {\r\n        Game.goToState(GameStates.TRAVEL);\r\n    }\r\n\r\n    onClickBag() {\r\n        Game.goToState(GameStates.BAG);\r\n    }\r\n}","import { Item } from './Item';\r\n\r\nexport enum EventType {\r\n    Exploration,\r\n    Combat\r\n}\r\n\r\nexport class Event {\r\n    private _name: string;\r\n    private _description: string;\r\n    private _type: EventType;\r\n    private _items: Item[] = [];\r\n\r\n    constructor(name: string, description: string, type: EventType, items?: Item[]) {\r\n        this._name = name;\r\n        this._description = description;\r\n        this._type = type;\r\n        this._items = items;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get description() {\r\n        return this._description;\r\n    }\r\n\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    get items() {\r\n        return this._items;\r\n    }\r\n\r\n    willGiveItems(): boolean {\r\n        return this._items ? this._items.length > 0 : false;\r\n    }\r\n}","export class Item {\r\n    private _name: string;\r\n    private _description: string;\r\n    private _amount: number;\r\n\r\n    constructor(name: string, description: string, amount: number) {\r\n        this._name = name;\r\n        this._description = description;\r\n        this._amount = amount;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    get description(): string {\r\n        return this._description;\r\n    }\r\n\r\n    get amount(): number {\r\n        return this._amount;\r\n    }\r\n\r\n    getNameWithAmount(): string {\r\n        return this.name + (this.amount > 1 ? ' x ' + this.amount : '' );\r\n    }\r\n\r\n    decreaseAmount(): void {\r\n        this._amount--;\r\n    }\r\n\r\n    increaseAmount(): void {\r\n        this._amount++;\r\n    }\r\n}","import { Event, EventType } from '../entities/Event';\r\nimport { Game, GameStates } from '../Game';\r\nimport { Item } from '../entities/Item';\r\n\r\nexport class EventManager {\r\n    private _titleElement: HTMLElement;\r\n    private _descriptionElement: HTMLElement;\r\n    private _imageElement: HTMLElement;\r\n    private _yesButton: HTMLElement;\r\n    private _noButton: HTMLElement;\r\n    private _currentEvent: Event;\r\n\r\n    constructor() {\r\n        this._titleElement = document.getElementById(\"event-page-title\");\r\n        this._descriptionElement = document.getElementById(\"event-page-description\");\r\n        this._imageElement = document.getElementById(\"event-page-image\");\r\n        this._yesButton = document.getElementById(\"event-page-yes-btn\");\r\n        this._noButton = document.getElementById(\"event-page-no-btn\");\r\n\r\n        this._yesButton.addEventListener('click', () => { this.onEventPageYesBtn() });\r\n        this._noButton.addEventListener('click', () => { this.onEventPageNoBtn() });\r\n    }\r\n\r\n    start(): void {\r\n        let events = [new Event(\"Abandoned house\", \"No sign of life. Explore the house?\", EventType.Exploration, [new Item('Food', '', 1)]), \r\n                      new Event(\"Wild Wolf Appeared\", \"Fight with the wolf?\", EventType.Combat)];\r\n        let randomIndex = this.getRandomArbitrary(events.length);\r\n\r\n        this._currentEvent = events[randomIndex];\r\n        this.showWaitingMessage();\r\n    }\r\n\r\n    showWaitingMessage(): void {\r\n        this._titleElement.style.display = 'none';\r\n        this._descriptionElement.innerHTML = 'Something happened!'\r\n        this._imageElement.style.display = 'none';\r\n        this._yesButton.style.display = 'none';\r\n        this._noButton.style.display = 'none';\r\n\r\n        setTimeout(() => this.showEvent(), 1000);\r\n    }\r\n\r\n    showEvent(): void {\r\n        this._titleElement.style.display = 'block';\r\n        this._titleElement.innerHTML = this._currentEvent.name;\r\n        this._descriptionElement.innerHTML = this._currentEvent.description;\r\n        this._imageElement.style.display = 'block';\r\n        this.showButtons();\r\n    }\r\n\r\n    showButtons(): void {\r\n        this._yesButton.style.display = 'inline-block';\r\n        this._noButton.style.display = 'inline-block';\r\n\r\n        switch (this._currentEvent.type) {\r\n            case EventType.Exploration: \r\n                this._yesButton.innerHTML = 'Explore';\r\n                this._noButton.innerHTML = 'Ignore';\r\n                break;\r\n            case EventType.Combat:\r\n                this._yesButton.innerHTML = 'Fight';\r\n                this._noButton.innerHTML = 'Run away';\r\n        }\r\n    }\r\n\r\n    onEventPageYesBtn(): void {\r\n        let randomCharacterIndex = this.getRandomArbitrary(Game.characters.length);\r\n        let randomCharacter = Game.characters[randomCharacterIndex];\r\n\r\n        switch (this._currentEvent.type) {\r\n            case EventType.Exploration:\r\n                Game.log.addTempLog(randomCharacter.name + ' found food!');\r\n                break;\r\n            case EventType.Combat:\r\n                randomCharacter.looseHealth(1);\r\n                break;\r\n        }\r\n\r\n        if(this._currentEvent.willGiveItems()) {\r\n            for (let item of this._currentEvent.items) {\r\n                Game.bagManager.putItem(item);\r\n            }\r\n        }\r\n\r\n        if (Game.log.isThereAnyTemporaryLog()) {\r\n            Game.goToState(GameStates.LOG);\r\n        } else {\r\n            Game.goToState(GameStates.TRAVEL);\r\n        }\r\n    }\r\n\r\n    onEventPageNoBtn(): void {\r\n\r\n        if (Game.log.isThereAnyTemporaryLog()) {\r\n            Game.goToState(GameStates.LOG);\r\n        } else {\r\n            Game.goToState(GameStates.TRAVEL);\r\n        }\r\n    }\r\n\r\n    getRandomArbitrary(max: number): number {\r\n        return Math.floor(Math.random() * max) \r\n    }\r\n}","import { Game } from '../Game';\r\n\r\nexport class GameOverManager {\r\n    private _gameOverMessage: Element;\r\n\r\n    constructor() {\r\n        this._gameOverMessage = document.querySelector(\"#game-over-message\");\r\n    }\r\n\r\n    start(): void {\r\n        let livingCharacters = 0;\r\n\r\n        for (var i = 0; i < Game.characters.length; i++){\r\n            const character = Game.characters[i];\r\n\r\n            if (character.health > 0) {\r\n                livingCharacters++;\r\n            }\r\n        }\r\n\r\n        this.setGameOverMessage(livingCharacters + \" of \" + Game.characters.length + \" survived!\");\r\n    }\r\n\r\n    setGameOverMessage(message: string): void {\r\n        this._gameOverMessage.innerHTML = message;\r\n    }\r\n}","import { Game, GameStates } from '../Game';\r\n\r\nexport class StatsManager {\r\n    private _currentCharacterIndex: number;\r\n    private _charactersList: any;\r\n    private _backCharacterBtn: Element;\r\n\r\n    constructor() {\r\n        this._currentCharacterIndex = 0;\r\n        this._charactersList = [];\r\n\r\n        this.getPageElements();\r\n    }\r\n\r\n    start(): void {\r\n        this.showCharacters();\r\n    }\r\n\r\n    getPageElements(): void {\r\n        \r\n        this._charactersList[0] = {};\r\n        this._charactersList[0].nameField = document.querySelector(\"#first-character-name-field\");\r\n        this._charactersList[0].healthField = document.querySelector(\"#first-character-health-field\");\r\n        this._charactersList[0].atributesField = document.querySelector(\"#first-character-atributes-field\");\r\n\r\n        this._charactersList[1] = {};\r\n        this._charactersList[1].nameField = document.querySelector(\"#second-character-name-field\");\r\n        this._charactersList[1].healthField = document.querySelector(\"#second-character-health-field\");\r\n        this._charactersList[1].atributesField = document.querySelector(\"#second-character-atributes-field\");\r\n\r\n        this._charactersList[2] = {};\r\n        this._charactersList[2].nameField = document.querySelector(\"#third-character-name-field\");\r\n        this._charactersList[2].healthField = document.querySelector(\"#third-character-health-field\");\r\n        this._charactersList[2].atributesField = document.querySelector(\"#third-character-atributes-field\");\r\n\r\n        this._charactersList[3] = {};\r\n        this._charactersList[3].nameField = document.querySelector(\"#fourth-character-name-field\");\r\n        this._charactersList[3].healthField = document.querySelector(\"#fourth-character-health-field\");\r\n        this._charactersList[3].atributesField = document.querySelector(\"#fourth-character-atributes-field\");\r\n\r\n        this._charactersList[4] = {};\r\n        this._charactersList[4].nameField = document.querySelector(\"#fifth-character-name-field\");\r\n        this._charactersList[4].healthField = document.querySelector(\"#fifth-character-health-field\");\r\n        this._charactersList[4].atributesField = document.querySelector(\"#fifth-character-atributes-field\");\r\n\r\n        this._backCharacterBtn = document.querySelector(\"#back-character-btn\");\r\n        this._backCharacterBtn.addEventListener('click', () => { this.onClickBackCharacter() });\r\n    }\r\n\r\n    showCharacters(): void {\r\n        let characters = Game.characters;\r\n\r\n        for (let i = 0; i < characters.length; i++){\r\n            let character = characters[i];\r\n            this._charactersList[i].nameField.innerHTML = character.name + ' - ' + character.kinship;\r\n\r\n            if (character.isDead) {\r\n                this._charactersList[i].healthField.innerHTML = 'Is Dead';\r\n                this._charactersList[i].atributesField.style.display = 'none';\r\n            } else {\r\n                this._charactersList[i].healthField.innerHTML = 'Health: ' + character.health;\r\n                this._charactersList[i].atributesField.innerHTML = character.getHungry();\r\n            }\r\n        }\r\n    }\r\n\r\n    onClickBackCharacter(): void {\r\n        Game.goToState(GameStates.TRAVEL);\r\n    }\r\n}","import { Game, GameStates } from '../Game';\r\n\r\nexport class TravelManager {\r\n    private _travelPage: Element;\r\n    private _travelImage: Element;\r\n    private _travelledDistanceField: Element;\r\n    private _currentTimeField: Element;\r\n    private _progressBar: HTMLElement;\r\n    private _walkBtn: Element;\r\n    private _campBtn: Element;\r\n    private _statsBtn: Element;\r\n    private _walking: boolean;\r\n    \r\n    constructor() {\r\n        this._travelPage = document.querySelector(\"#travel-page\");\r\n        this._travelImage = document.querySelector(\"#travel-img\");\r\n        this._travelledDistanceField = document.querySelector(\"#travelled-distance\");\r\n        this._currentTimeField = document.querySelector(\"#current-time-field\");\r\n        this._progressBar = document.getElementById(\"progress-bar\");\r\n        this._walkBtn = document.querySelector(\"#walk-btn\");\r\n        this._campBtn = document.querySelector(\"#camp-btn\");\r\n        this._statsBtn = document.querySelector(\"#stats-btn\");\r\n\r\n        this._walkBtn.addEventListener('click', () => { this.onClickWalkBtn() });\r\n        this._campBtn.addEventListener('click', () => { this.onClickCampBtn() });\r\n        this._statsBtn.addEventListener('click', () => { this.onClickStatsBtn() });\r\n\r\n        this.showTravelledDistance();\r\n    }\r\n\r\n    start(): void {\r\n        this.showTime();\r\n    }\r\n\r\n    onClickWalkBtn(): void {\r\n        this.passOneHour();\r\n\r\n        const foundEvent = this.checkEvent();\r\n\r\n        if (foundEvent) {\r\n            Game.goToState(GameStates.EVENT);\r\n        } else if (Game.log.isThereAnyTemporaryLog()) {\r\n            Game.goToState(GameStates.LOG);\r\n        }\r\n    }\r\n\r\n    onClickCampBtn(): void {\r\n        Game.goToState(GameStates.CAMP);\r\n    }\r\n\r\n    onClickStatsBtn() {\r\n        Game.goToState(GameStates.STATS);\r\n    }\r\n\r\n    passOneHour(): void {\r\n\r\n        if (Game.clock.currentHour == 12 && Game.clock.anteMeridiem) {\r\n            this.gotoNextDay();\r\n        }\r\n\r\n        Game.clock.nextHour();\r\n        this.walkOneHour();\r\n        Game.characterManager.increaseHungryOfAllCharacters();\r\n\r\n\r\n        this.showTime();\r\n    }\r\n\r\n    checkEvent() {\r\n        return this.getRandomArbitrary(1, 100) <= 25;\r\n    }\r\n\r\n    getRandomArbitrary(min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    gotoNextDay() {\r\n        Game.addDaysToCurrentDay(1);\r\n        this.showTime();\r\n    }\r\n\r\n    showTime() {\r\n        this._currentTimeField.innerHTML = Game.clock.showTime() + ' - day ' + Game.currentDay;\r\n\r\n        if (Game.clock.anteMeridiem) {\r\n            if (Game.clock.currentHour > 6 && Game.clock.currentHour < 12) {\r\n                this._currentTimeField.innerHTML += ' - daylight';\r\n            } else {\r\n                this._currentTimeField.innerHTML += ' - night';\r\n            }\r\n        } else {\r\n            if (Game.clock.currentHour > 6 && Game.clock.currentHour < 12) {\r\n                this._currentTimeField.innerHTML += ' - night';\r\n            } else {\r\n                this._currentTimeField.innerHTML += ' - daylight';\r\n            }\r\n        }\r\n    }\r\n\r\n    walkOneHour() {\r\n        Game.addDistanceToTravelledDistance(2);\r\n        this.increaseProgressBar();\r\n\r\n        this.showTravelledDistance();\r\n\r\n        let allPlayerAreDead = Game.characterManager.checkIfAllCharactersAreDead();\r\n        if (allPlayerAreDead) \r\n            Game.goToState(GameStates.GAME_OVER);\r\n        \r\n        if(Game.travelledDistance > Game.distanceToGoal) {\r\n            this.arrivedAtTheGoal();\r\n        }\r\n    }\r\n\r\n    increaseProgressBar() {\r\n        let progressBarFullWidth = 321;\r\n        let unity = progressBarFullWidth / Game.distanceToGoal;\r\n        this._progressBar.style.width = Game.travelledDistance * unity + 'px';\r\n    }\r\n\r\n    getRandomCharacter() {\r\n        let x = Math.floor(Math.random() * (Game.characters.length));\r\n        return x;\r\n    }\r\n\r\n    showTravelledDistance() {\r\n        this._travelledDistanceField.innerHTML = 'Travelled distance: ' + Game.travelledDistance + ' miles';\r\n    }\r\n\r\n    arrivedAtTheGoal() {\r\n        Game.goToState(GameStates.GAME_OVER);\r\n    }\r\n}","import { Game, GameStates } from '../Game';\r\n\r\nexport class LogManager {\r\n    private _logList: Element;\r\n    private _travelBtn: Element;\r\n    private _tempLogs: string[] = [];\r\n    private _logs: string[] = [];\r\n\r\n    constructor() {\r\n        this._logList = document.querySelector(\"#log-list\");\r\n        \r\n        this._travelBtn = document.querySelector(\"#log-back-character-btn\");\r\n        this._travelBtn.addEventListener('click', () => { this.onClickTravel() });\r\n    }\r\n\r\n    start(): void {\r\n        this.showLogs();\r\n    }\r\n\r\n    showLogs(): void {\r\n        if(this._tempLogs.length <= 0) \r\n            throw new Error('No logs found');\r\n\r\n        let logs = '';\r\n\r\n        for (let i = 0; i < this._tempLogs.length; i++) {\r\n            logs += '<li>' + this._tempLogs[i] + '</li>';\r\n        }\r\n\r\n        this._logs = this._tempLogs;\r\n        this._tempLogs = [];\r\n\r\n        this._logList.innerHTML = logs;\r\n    }\r\n\r\n    clearLogs(): void {\r\n        this._logList.innerHTML = '';\r\n    }\r\n\r\n    log(text: string): void {\r\n        this._tempLogs.push(text);\r\n    }\r\n\r\n    onClickTravel() {\r\n        Game.goToState(GameStates.TRAVEL);\r\n    }\r\n\r\n    isThereAnyTemporaryLog(): boolean {\r\n        return this._tempLogs.length > 0;\r\n    }\r\n\r\n    addTempLog(log: string) {\r\n        this._tempLogs.push(log);\r\n    }\r\n}","import { Game, GameStates } from '../Game';\r\nimport { Item } from '../entities/Item';\r\n\r\nexport class BagManager {\r\n    private _items: Item[] = [];\r\n    private _itemListElement: Element;\r\n    private _selectedItemElement: any;\r\n    private _selectedItem: Item;\r\n    private _bagCloseBtn: Element;\r\n    private _bagThrowAwayBtn: HTMLElement;\r\n\r\n    constructor() {\r\n        this._itemListElement = document.querySelector('#bag-item-list');\r\n        this._selectedItemElement = document.getElementById('bag-selected-item');\r\n        this._bagCloseBtn = document.querySelector('#bag-close-btn');\r\n        this._bagThrowAwayBtn = document.getElementById('bag-throw-away-btn');\r\n\r\n        this._bagCloseBtn.addEventListener('click', () => { this.onClickBagClose() });\r\n        this._bagThrowAwayBtn.addEventListener('click', () => { this.onClickThrowAway() });\r\n    }\r\n\r\n    start() {\r\n        this.hideSelectedItem();\r\n        this.showItems();\r\n        this._bagThrowAwayBtn.style.display = 'none';\r\n    }\r\n\r\n    onClickBagClose() {\r\n        Game.goToState(GameStates.CAMP);\r\n    }\r\n\r\n    onClickThrowAway() {\r\n        this.removeOrDecreaseItem();\r\n        this._itemListElement.innerHTML = '';\r\n        this.showItems();\r\n        this._bagThrowAwayBtn.style.display = 'none';\r\n    }\r\n\r\n    hideSelectedItem() {\r\n        this._selectedItemElement.innerHTML = '';\r\n        this._selectedItemElement.style.display = 'none';\r\n    }\r\n\r\n    showSelectedItem() {\r\n        this._selectedItemElement.style.display = 'block';\r\n    }\r\n\r\n    showItems() {\r\n        this._itemListElement.innerHTML = '';\r\n\r\n        if (this._items.length == 0) {\r\n            this._itemListElement.innerHTML = 'Empty';\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < this._items.length; i++) {\r\n            const li = document.createElement(\"li\");\r\n            const button = document.createElement(\"input\");\r\n            button.type = \"button\";\r\n            button.value = this._items[i].getNameWithAmount();\r\n            button.addEventListener('click', () => this.selectItem(this._items[i]) );\r\n            li.appendChild(button);\r\n            this._itemListElement.appendChild(li);\r\n        }\r\n    }\r\n\r\n    putItem(item: Item): void {\r\n        let existingItemIndex = this._items.findIndex(item => item.name == item.name);\r\n\r\n        if (existingItemIndex >= 0) {\r\n            this._items[existingItemIndex].increaseAmount();\r\n        } else {\r\n            this._items.push(item);\r\n        }\r\n    }\r\n\r\n    showCharacters() {\r\n        for (let i = 0; i < Game.characters.length; i++) {\r\n            const li = document.createElement(\"li\");\r\n            const button = document.createElement(\"input\");\r\n            button.type = \"button\";\r\n            button.value = Game.characters[i].name;\r\n            button.addEventListener('click', () => this.useItem(i) );\r\n            li.appendChild(button);\r\n            this._itemListElement.appendChild(li);\r\n        }\r\n    }\r\n\r\n    selectItem(selectedItem: Item) {\r\n        this._selectedItem = selectedItem;\r\n        this._itemListElement.innerHTML = '';\r\n        this._selectedItemElement.innerHTML = 'Give ' + this._selectedItem.name + ' to';\r\n        this.showSelectedItem();\r\n        this.showCharacters();\r\n        this._bagThrowAwayBtn.style.display = 'block';\r\n    }\r\n\r\n    useItem(index: number) {\r\n        this.removeOrDecreaseItem();\r\n        this.hideSelectedItem();\r\n        this.showItems();\r\n        Game.characters[index].decreaseHungry(12);\r\n        this._bagThrowAwayBtn.style.display = 'none';\r\n    }\r\n\r\n    removeOrDecreaseItem() {\r\n        if (this._selectedItem.amount > 1) {\r\n            this._selectedItem.decreaseAmount();\r\n        } else {\r\n            this.removeItem(this._selectedItem);\r\n        }\r\n    }\r\n\r\n    removeItem(itemToRemove: Item): void {\r\n        this._items = this._items.filter(item => item.name !== itemToRemove.name);\r\n    }\r\n}","import { Game } from '../Game';\r\n\r\nexport class Character {\r\n    private _name: string;\r\n    private _health: number;\r\n    private _kinship: string;\r\n    private _isDead: boolean = false;\r\n    private _sick: boolean = false;\r\n    private _hungry: number;\r\n    private _cold: boolean = false;\r\n    private _maxHealth: number;\r\n    private readonly _limitForHungry = 18;\r\n\r\n    constructor(name: string, health: number, kinship: string, sick: boolean, hungry: number, cold: boolean) {\r\n        this._name = name;\r\n        this._health = health;\r\n        this._kinship = kinship;\r\n        this._isDead = false;\r\n        this._sick = sick;\r\n        this._hungry = hungry;\r\n        this._cold = cold;\r\n        this._maxHealth = health;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get isDead() {\r\n        return this._isDead;\r\n    }\r\n\r\n    get health() {\r\n        return this._health;\r\n    }\r\n\r\n    get kinship() {\r\n        return this._kinship;\r\n    }\r\n\r\n    increaseHungry() {\r\n        if (this._hungry >= this._limitForHungry) {\r\n            if (!this._isDead) {\r\n                Game.log.addTempLog(this._name + ' is starving to death');\r\n            }\r\n            this.looseHealth(1);\r\n        } else {\r\n            this._hungry++;\r\n        }\r\n    }\r\n\r\n    decreaseHungry(hungryToDecrease: number) {\r\n        if (hungryToDecrease < 0) {\r\n            throw new Error('Invalid value for hungryToDecrease');\r\n        }\r\n\r\n        if (this._hungry > 0) {\r\n            this._hungry = this._hungry - hungryToDecrease;\r\n        }\r\n    }\r\n\r\n    getHungry(): string {\r\n        if (this._hungry >= 6 && this._hungry < 12) {\r\n            return '[HUNGRY]';\r\n        } else if (this._hungry >= 12) {\r\n            return '[VERY HUNGRY]'\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    looseHealth(healthToLoose: number): void {\r\n        if (healthToLoose < 0 || healthToLoose > this._maxHealth) {\r\n            throw new Error('Invalid value for healthToLoose');\r\n        }\r\n\r\n        if (this._health > 0) {\r\n            this._health -= healthToLoose;\r\n\r\n            if (this._health <= 0) {\r\n                this._health = 0;\r\n\r\n                if (this._hungry >= this._limitForHungry) {\r\n                    Game.log.addTempLog(this._name + ' starved to death at day ' + Game.currentDay);\r\n                } else {\r\n                    Game.log.addTempLog(this._name + ' died at day ' + Game.currentDay);\r\n                }\r\n                \r\n                this._isDead = true;\r\n            } else {\r\n                Game.log.addTempLog(this._name + ' lost -' + healthToLoose + ' health');\r\n            }\r\n        }\r\n    }\r\n}","import { Game } from '../Game';\r\n\r\nexport class CharacterManager {\r\n    constructor() {\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    checkIfAllCharactersAreDead(): boolean {\r\n        let characters = Game.characters;\r\n\r\n        return characters.every((character) => character.isDead);\r\n    }\r\n\r\n    increaseHungryOfAllCharacters() {\r\n        let characters = Game.characters;\r\n        for (let character of characters) {\r\n            character.increaseHungry();\r\n        }\r\n    }\r\n\r\n    getNumberOfCharactersAlive(): number {\r\n        return Game.characters.filter((character) => !character.isDead).length;\r\n    }\r\n}","export class Clock {\r\n    private _anteMeridiem: boolean;\r\n    private _currentHour: number;\r\n\r\n    constructor(currentHour: number, anteMediem: boolean) {\r\n        this._currentHour = currentHour;\r\n        this._anteMeridiem = anteMediem;\r\n    }\r\n\r\n    get currentHour(): number {\r\n        return this._currentHour;\r\n    }\r\n\r\n    get anteMeridiem(): boolean {\r\n        return this._anteMeridiem;\r\n    }\r\n\r\n    nextHour() {\r\n        if (this._currentHour == 11) {\r\n            this._anteMeridiem = !this._anteMeridiem;\r\n        }\r\n        \r\n        if (this._currentHour == 12) {\r\n            this._currentHour = 1;\r\n        } else {\r\n            this._currentHour++;\r\n        }\r\n    }\r\n\r\n    showTime(): string {\r\n        return (this._currentHour <= 9 ? '0' : '') + this._currentHour.toString() + ':00 ' + (this._anteMeridiem ? 'a.m' : 'p.m');\r\n    }\r\n}","import { CampManager } from './managers/CampManager';\r\nimport { EventManager } from './managers/EventManager';\r\nimport { GameOverManager } from './managers/GameOverManager';\r\nimport { StatsManager } from './managers/StatsManager';\r\nimport { TravelManager } from './managers/TravelManager';\r\nimport { LogManager } from './managers/LogManager';\r\nimport { BagManager } from './managers/BagManager';\r\nimport { Character } from './entities/Character';\r\nimport { CharacterManager } from './managers/CharacterManager';\r\nimport { Item } from './entities/Item';\r\nimport { Clock } from './entities/Clock';\r\n\r\nexport enum GameStates {\r\n    TRAVEL,\r\n    CAMP,\r\n    STATS,\r\n    EVENT,\r\n    GAME_OVER,\r\n    LOG,\r\n    BAG,\r\n}\r\n\r\nexport class Game {\r\n    private static _states: GameStates;\r\n    private static _currentState = 1;\r\n    private static _currentDay = 1;\r\n    private static _hours = 0;\r\n    private static _clock: Clock; \r\n    private static _characters: Character[] = [];\r\n    private static _travelledDistance = 0;\r\n    private static _distanceToGoal = 300;\r\n    private static _travelPage: HTMLElement;\r\n    private static _logPage: HTMLElement;\r\n    private static _campPage: HTMLElement;\r\n    private static _statsPage: HTMLElement;\r\n    private static _eventPage: HTMLElement;\r\n    private static _gameOverPage: HTMLElement;\r\n    private static _bagPage: HTMLElement;\r\n    private static _camp: CampManager;\r\n    private static _events: EventManager;\r\n    private static _gameOver: GameOverManager;\r\n    private static _stats: StatsManager;\r\n    private static _travel: TravelManager;\r\n    private static _log: LogManager;\r\n    private static _bag: BagManager;\r\n    private static _characterManager: CharacterManager;\r\n\r\n    constructor() {\r\n        Game._travelPage = document.getElementById(\"travel-page\");\r\n        Game._logPage = document.getElementById(\"log-page\");\r\n        Game._campPage = document.getElementById(\"camp-page\");\r\n        Game._statsPage = document.getElementById(\"stats-page\");\r\n        Game._eventPage = document.getElementById(\"event-page\");\r\n        Game._gameOverPage = document.getElementById(\"game-over-page\");\r\n        Game._bagPage = document.getElementById(\"bag-page\");\r\n\r\n        Game._camp = new CampManager();\r\n        Game._events = new EventManager();\r\n        Game._gameOver = new GameOverManager();\r\n        Game._stats = new StatsManager();\r\n        Game._travel = new TravelManager();\r\n        Game._log = new LogManager();\r\n        Game._bag = new BagManager();\r\n        Game._characterManager = new CharacterManager();\r\n\r\n        Game._clock = new Clock(8, true);\r\n    }\r\n\r\n    public start(): void {\r\n        Game.createAllCharacters();\r\n        Game.hideAllPages();\r\n        Game.addItemsToBag();\r\n        Game.showPage(Game._campPage);\r\n    }\r\n\r\n    static get log(): LogManager {\r\n        return Game._log;\r\n    }\r\n\r\n    static get clock(): Clock {\r\n        return Game._clock;\r\n    }\r\n\r\n    static get characterManager(): CharacterManager {\r\n        return Game._characterManager;\r\n    }\r\n\r\n    static get bagManager(): BagManager {\r\n        return Game._bag;\r\n    }\r\n\r\n    static get hours(): number {\r\n        return this._hours;\r\n    }\r\n\r\n    static set hours(hours: number) {\r\n        this._hours = hours;\r\n    }\r\n\r\n    static get currentDay(): number {\r\n        return Game._currentDay;\r\n    }\r\n\r\n    static get distanceToGoal(): number {\r\n        return this._distanceToGoal;\r\n    }\r\n\r\n    static get travelledDistance(): number {\r\n        return this._travelledDistance;\r\n    }\r\n\r\n    static get characters(): Character[] {\r\n        return this._characters;\r\n    }\r\n\r\n    public static addDistanceToTravelledDistance(distanceToAdd: number) {\r\n        Game._travelledDistance += distanceToAdd;\r\n    }\r\n\r\n    public static addDaysToCurrentDay (daysToAdd: number): void {\r\n        Game._currentDay += daysToAdd;\r\n    }\r\n\r\n    static createAllCharacters(): void {\r\n        const initialHealth = 5;\r\n        const initialHungry = 0;\r\n        Game._characters.push(new Character('Ethan', initialHealth, 'father', true, initialHungry, false));\r\n        Game._characters.push(new Character('Olivia', initialHealth, 'mother', false, initialHungry, true));\r\n        Game._characters.push(new Character('Michael', initialHealth, 'son', true, initialHungry, true));\r\n        Game._characters.push(new Character('Sophia', initialHealth, 'daughter', false, initialHungry, false));\r\n        Game._characters.push(new Character('Emma', initialHealth, 'grandmother', true, initialHungry, false));\r\n    }\r\n\r\n    public static addItemsToBag(): void {\r\n        Game._bag.putItem(new Item(\"Food\", \"\", 2));\r\n    }\r\n\r\n    public static goToState(state: GameStates): void {\r\n        Game._currentState = state;\r\n        this.setState();\r\n    }\r\n\r\n    public static showPage(page: HTMLElement): void {\r\n        page.style.display = \"block\";\r\n    }\r\n\r\n    public static hidePage(page: HTMLElement): void {\r\n        page.style.display = \"none\";\r\n    }\r\n\r\n    static hideAllPages(): void {\r\n        this.hidePage(Game._travelPage);\r\n        this.hidePage(Game._logPage);\r\n        this.hidePage(Game._campPage);\r\n        this.hidePage(Game._statsPage);\r\n        this.hidePage(Game._eventPage);\r\n        this.hidePage(Game._gameOverPage);\r\n        this.hidePage(Game._bagPage);\r\n    }\r\n\r\n    public static setState(): void {\r\n        this.hideAllPages();\r\n\r\n        switch(Game._currentState) {\r\n            case GameStates.TRAVEL: \r\n                this.showPage(Game._travelPage);\r\n                Game._travel.start();\r\n            break;\r\n            case GameStates.CAMP: \r\n                this.showPage(Game._campPage);\r\n                Game._camp.start();\r\n            break;\r\n            case GameStates.STATS: \r\n                this.showPage(Game._statsPage);\r\n                Game._stats.start();\r\n            break;\r\n            case GameStates.EVENT: \r\n                this.showPage(Game._eventPage);\r\n                Game._events.start();\r\n            break;\r\n            case GameStates.LOG:\r\n                this.showPage(Game._logPage);\r\n                Game._log.start();\r\n            break;\r\n            case GameStates.GAME_OVER:\r\n                this.showPage(Game._gameOverPage);\r\n                Game._gameOver.start();\r\n            break;\r\n            case GameStates.BAG:\r\n                this.showPage(Game._bagPage);\r\n                Game._bag.start();\r\n            break;\r\n        }\r\n    }\r\n}\r\n","import { Game } from './Game';\r\n\r\nconst game = new Game();\r\ngame.start();\r\n"]}