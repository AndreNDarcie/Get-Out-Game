{"version":3,"sources":["js/entities/Character.js","js/globals.js","js/managers/Camp.js","js/managers/Event.js","js/managers/Events.js","js/managers/GameOver.js","js/managers/Heal.js","js/managers/Hunt.js","js/managers/Report.js","js/managers/Sleep.js","js/managers/Stats.js","js/managers/Travel.js","js/managers/Walk.js","js/Game.js","js/index.js"],"names":["Character","name","health","kinship","healthToLoose","logs","push","Globals","currentDay","gameStates","TRAVEL","CAMP","SLEEP","HUNT","HEAL","STATS","EVENT","WALKING","REPORT","GAME_OVER","currentState","hours","characters","travelledDistance","gamePages","travelPage","document","getElementById","campPage","sleepPage","huntPage","healPage","statsPage","eventPage","walkingPage","reportPage","gameOverPage","Camp","game","campImg","querySelector","travelBtn","statsBtn","sleepBtn","huntBtn","healBtn","addEventListener","e","onClickTravel","onClickStats","onClickSleep","onClickHunt","onClickHeal","goToState","Event","description","Events","eventPageTitle","eventPageDescription","eventPageImage","eventPageBackBtn","onEventPageBackBtn","events","randomIndex","getRandomArbitrary","length","event","showEvent","innerHTML","max","Math","floor","random","GameOver","Heal","Hunt","Report","Sleep","Stats","currentCharacterIndex","getPageElements","showCurrentCharacter","nameField","kinshipField","thinkingField","healthField","woundsField","hungerField","fatigueField","feelingField","itemField","previousCharacterBtn","nextCharacterBtn","backCharacterBtn","onClickPreviousCharacter","onClickNextCharacter","onClickBackCharacter","currentCharacter","Travel","travelImage","travelledDistanceField","currentTimeField","progressBar","walkBtn","campBtn","onClickWalk","onClickCamp","showTime","startWalking","passHours","i","walking","gotoNextHour","walkOneHour","gotoNextDay","checkEvent","min","showTravelledDistance","passOneHour","looseHealth","console","log","arrivedAtTheGoal","stopWalking","Walk","Game","states","pages","camp","gameOver","heal","hunt","report","sleep","stats","travel","walk","hideAllPages","showPage","evt","state","setState","page","style","display","hidePage","start","WALK"],"mappings":"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","file":"js.91c7edf7.map","sourceRoot":"..","sourcesContent":["import { Globals } from \"../globals\";\r\n\r\nexport class Character {\r\n    \r\n    constructor(name, health, kinship) {\r\n        this.name = name;\r\n        this.health = health;\r\n        this.kinship = kinship;\r\n    }\r\n\r\n    looseHealth(healthToLoose) {\r\n\r\n        if (this.health > 0) {\r\n            \r\n            this.health -= healthToLoose;\r\n\r\n            if (this.health <= 0) {\r\n                this.health = 0;\r\n                Globals.logs.push(this.name + ' died at day ' + Globals.currentDay);\r\n            } else {\r\n                Globals.logs.push(this.name + ' lost -' + healthToLoose + ' health');\r\n            }\r\n        }\r\n    }\r\n}","import { Character } from '/js/entities/Character.js';\r\n\r\nexport let Globals = {\r\n    gameStates: {\r\n        TRAVEL: 1,\r\n        CAMP: 2,\r\n        SLEEP: 3,\r\n        HUNT: 4,\r\n        HEAL: 5,\r\n        STATS: 6,\r\n        EVENT: 7,\r\n        WALKING: 8,\r\n        REPORT: 9,\r\n        GAME_OVER: 10\r\n    },\r\n    currentState: 1,\r\n    currentDay: 0,\r\n    hours: 0,\r\n    characters: [],\r\n    travelledDistance: 0,\r\n    logs: [],\r\n    gamePages: {\r\n        travelPage: document.getElementById(\"travel-page\"),\r\n        campPage: document.getElementById(\"camp-page\"),\r\n        sleepPage: document.getElementById(\"sleep-page\"),\r\n        huntPage: document.getElementById(\"hunt-page\"),\r\n        healPage: document.getElementById(\"heal-page\"),\r\n        statsPage: document.getElementById(\"stats-page\"),\r\n        eventPage: document.getElementById(\"event-page\"),\r\n        walkingPage: document.getElementById(\"walking-page\"),\r\n        reportPage: document.getElementById(\"report-page\"),\r\n        gameOverPage: document.getElementById(\"game-over-page\"),\r\n    }\r\n}\r\n\r\nGlobals.characters.push(new Character('Ethan', 5, 'father'));\r\nGlobals.characters.push(new Character('Olivia', 5, 'mother'));\r\nGlobals.characters.push(new Character('Michael', 5, 'son'));\r\nGlobals.characters.push(new Character('Sophia', 5, 'daughter'));\r\nGlobals.characters.push(new Character('Emma', 5, 'grandmother'));","import { Globals } from '../globals.js';\r\n\r\nexport class Camp {\r\n\r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.campImg = document.querySelector(\"#camp-img\");\r\n        this.travelBtn = document.querySelector(\"#travel-btn\");\r\n        this.statsBtn = document.querySelector(\"#stats-btn\");\r\n        this.sleepBtn = document.querySelector(\"#sleep-btn\");\r\n        this.huntBtn = document.querySelector(\"#hunt-btn\");\r\n        this.healBtn = document.querySelector(\"#heal-btn\");\r\n\r\n        this.travelBtn.addEventListener('click', (e) => { this.onClickTravel(e) });\r\n        this.statsBtn.addEventListener('click', (e) => { this.onClickStats(e) });\r\n        this.sleepBtn.addEventListener('click', (e) => { this.onClickSleep(e) });\r\n        this.huntBtn.addEventListener('click', (e) => { this.onClickHunt(e) });\r\n        this.healBtn.addEventListener('click', (e) => { this.onClickHeal(e) });\r\n    }\r\n\r\n    start() {\r\n        \r\n    } \r\n\r\n    onClickTravel() {\r\n        this.game.goToState(Globals.gameStates.TRAVEL);\r\n    }\r\n\r\n    onClickStats() {\r\n        this.game.goToState(Globals.gameStates.STATS);\r\n    }\r\n\r\n    onClickSleep() {\r\n        this.game.goToState(Globals.gameStates.SLEEP);\r\n    }\r\n\r\n    onClickHunt() {\r\n        this.game.goToState(Globals.gameStates.HUNT);\r\n    }\r\n\r\n    onClickHeal() {\r\n        this.game.goToState(Globals.gameStates.HEAL);\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Event {\r\n\r\n    constructor(name, description) {\r\n        this.name = name;\r\n        this.description = description;\r\n    }\r\n}","import { Event } from './Event.js';\r\nimport { Globals } from '../globals.js';\r\n\r\nexport class Events {\r\n\r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.reportPage = document.getElementById(\"report-page\");\r\n        this.eventPageTitle = document.getElementById(\"event-page-title\");\r\n        this.eventPageDescription = document.getElementById(\"event-page-description\");\r\n        this.eventPageImage = document.getElementById(\"event-page-image\");\r\n        this.eventPageBackBtn = document.getElementById(\"event-page-back-btn\");\r\n\r\n        this.eventPageBackBtn.addEventListener('click', (e) => { this.onEventPageBackBtn(e) });\r\n    }\r\n\r\n    start() {\r\n        let events = [new Event(\"Event 1\", \"Event description\"), \r\n                      new Event(\"Wolf\", \"Event description\")];\r\n        let randomIndex = this.getRandomArbitrary(events.length);\r\n\r\n        this.event = events[randomIndex];\r\n\r\n        this.showEvent();\r\n    }\r\n\r\n    showEvent() {\r\n        this.eventPageTitle.innerHTML = this.event.name;\r\n        this.eventPageDescription.innerHTML = this.event.description;\r\n    }\r\n\r\n    onEventPageBackBtn(e) {\r\n        this.game.goToState(Globals.gameStates.TRAVEL);\r\n    }\r\n\r\n    getRandomArbitrary(max) {\r\n        return Math.floor(Math.random() * max) \r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class GameOver {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Heal {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Hunt {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Report {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Sleep {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Stats {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n        this.currentCharacterIndex = 0;\r\n\r\n        this.getPageElements();\r\n    }\r\n\r\n    start() {\r\n        this.showCurrentCharacter();\r\n    }\r\n\r\n    getPageElements() {\r\n\r\n        this.nameField = document.querySelector(\"#name-field\");\r\n        this.kinshipField = document.querySelector(\"#kinship-field\");\r\n        this.thinkingField = document.querySelector(\"#thinking-field\");\r\n        this.healthField = document.querySelector(\"#health-field\");\r\n        this.woundsField = document.querySelector(\"#wounds-field\");\r\n        this.hungerField = document.querySelector(\"#hunger-field\");\r\n        this.fatigueField = document.querySelector(\"#fatigue-field\");\r\n        this.feelingField = document.querySelector(\"#feeling-field\");\r\n        this.itemField = document.querySelector(\"#item-field\");\r\n        this.previousCharacterBtn = document.querySelector(\"#previous-character-btn\");\r\n        this.nextCharacterBtn = document.querySelector(\"#next-character-btn\");\r\n        this.backCharacterBtn = document.querySelector(\"#back-character-btn\");\r\n\r\n        this.previousCharacterBtn.addEventListener('click', (e) => { this.onClickPreviousCharacter(e) });\r\n        this.nextCharacterBtn.addEventListener('click', (e) => { this.onClickNextCharacter(e) });\r\n        this.backCharacterBtn.addEventListener('click', (e) => { this.onClickBackCharacter(e) });\r\n    }\r\n\r\n    onClickPreviousCharacter() {\r\n\r\n        if (this.currentCharacterIndex > 0) {\r\n            this.currentCharacterIndex--;\r\n        }\r\n\r\n        this.showCurrentCharacter();\r\n    }\r\n\r\n    onClickNextCharacter() {\r\n\r\n        if (this.currentCharacterIndex < (Globals.characters.length - 1)) {\r\n            this.currentCharacterIndex++;\r\n        }\r\n\r\n        this.showCurrentCharacter();\r\n    }\r\n\r\n    showCurrentCharacter() {\r\n        let currentCharacter = Globals.characters[this.currentCharacterIndex];\r\n        this.nameField.innerHTML = 'Name: ' + currentCharacter.name;\r\n        this.healthField.innerHTML = 'Health: ' + currentCharacter.health;\r\n        this.kinshipField.innerHTML = 'Kinship: ' + currentCharacter.kinship;\r\n    }\r\n\r\n    onClickBackCharacter() {\r\n        this.game.goToState(Globals.gameStates.CAMP);\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Travel {\r\n\r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.travelPage = document.querySelector(\"#travel-page\");\r\n        this.travelImage = document.querySelector(\"#travel-img\");\r\n        this.travelledDistanceField = document.querySelector(\"#travelled-distance\");\r\n        this.currentTimeField = document.querySelector(\"#current-time-field\");\r\n        this.progressBar = document.querySelector(\"#progress-bar\");\r\n        this.walkBtn = document.querySelector(\"#walk-btn\");\r\n        this.campBtn = document.querySelector(\"#camp-btn\");\r\n\r\n        this.walkBtn.addEventListener('click', (e) => { this.onClickWalk(e) });\r\n        this.campBtn.addEventListener('click', (e) => { this.onClickCamp(e) });\r\n    }\r\n\r\n    start() {\r\n        Globals.currentDay++;\r\n        this.showTime();\r\n    }\r\n\r\n    onClickWalk(e) {\r\n        this.startWalking();\r\n        this.passHours(3);\r\n    }\r\n\r\n    onClickCamp(e) {\r\n        this.game.goToState(Globals.gameStates.CAMP);\r\n    }\r\n\r\n    passHours(hours) {\r\n        for (let i = 0; i < hours; i++) {\r\n\r\n            if (!this.walking)\r\n                break;\r\n\r\n            this.gotoNextHour();\r\n        }\r\n    }\r\n\r\n    gotoNextHour() {\r\n        this.walkOneHour();\r\n\r\n        if (Globals.hours >= 24 ) {\r\n            Globals.hours = 0;\r\n            this.gotoNextDay();\r\n        }\r\n        this.showTime();\r\n        this.checkEvent();\r\n    }\r\n\r\n    checkEvent() {\r\n        if (this.getRandomArbitrary(1, 100) <= 50 ) {\r\n            this.game.goToState(Globals.gameStates.EVENT);\r\n        }\r\n    }\r\n\r\n    getRandomArbitrary(min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    gotoNextDay() {\r\n        Globals.currentDay++;\r\n        this.showTime();\r\n    }\r\n\r\n    passOneHour() {\r\n        Globals.hours++;\r\n        this.showTime();\r\n    }\r\n\r\n    showTime() {\r\n        this.currentTimeField.innerHTML = Globals.hours + ':00 - day ' + Globals.currentDay;\r\n\r\n        if(Globals.hours >= 18 || Globals.hours <= 6) {\r\n            this.currentTimeField.innerHTML += ' - night';\r\n        } else {\r\n            this.currentTimeField.innerHTML += ' - daylight';\r\n        }\r\n    }\r\n\r\n    walkOneHour() {\r\n        \r\n        Globals.travelledDistance += 2;\r\n        this.showTravelledDistance();\r\n        this.passOneHour();\r\n        Globals.characters[0].looseHealth(1);\r\n\r\n        console.log(Globals.logs);\r\n        \r\n        if(Globals.travelledDistance > 300) {\r\n            this.arrivedAtTheGoal();\r\n        }\r\n    }\r\n\r\n    showTravelledDistance() {\r\n        this.travelledDistanceField.innerHTML = 'Travelled distance: ' + Globals.travelledDistance + ' miles';\r\n    }\r\n\r\n    startWalking() {\r\n        this.walking = true;\r\n    }\r\n\r\n    stopWalking() {\r\n        this.walking = false;\r\n    }\r\n\r\n    arrivedAtTheGoal() {\r\n        stopWalking();\r\n        this.game.goToState(Globals.gameStates.GAME_OVER);\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Walk {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n}","import { Globals } from './globals.js';\r\nimport { Camp } from './managers/Camp.js';\r\nimport { Events } from './managers/Events.js';\r\nimport { GameOver } from './managers/GameOver.js';\r\nimport { Heal } from './managers/Heal.js';\r\nimport { Hunt } from './managers/Hunt.js';\r\nimport { Report } from './managers/Report.js';\r\nimport { Sleep } from './managers/Sleep.js';\r\nimport { Stats } from './managers/Stats.js';\r\nimport { Travel } from './managers/Travel.js';\r\nimport { Walk } from './managers/Walk.js';\r\n\r\n\r\nexport class Game {\r\n\r\n    constructor() {\r\n        this.states = Globals.gameStates;\r\n        this.pages = Globals.gamePages;\r\n\r\n        this.camp = new Camp(this);\r\n        this.events = new Events(this);\r\n        this.gameOver = new GameOver(this);\r\n        this.heal = new Heal(this);\r\n        this.hunt = new Hunt(this);\r\n        this.report = new Report(this);\r\n        this.sleep = new Sleep(this);\r\n        this.stats = new Stats(this);\r\n        this.travel = new Travel(this);\r\n        this.walk = new Walk(this);\r\n    }\r\n\r\n    start() {\r\n        var gamePages = Globals.gamePages;\r\n    \r\n        this.hideAllPages();\r\n        this.showPage(gamePages.campPage);\r\n    }\r\n\r\n    onClick(evt) {\r\n        this.goToState(this.states.TRAVEL);\r\n    }\r\n\r\n    goToState(state) {\r\n\r\n        if (!state) throw \"Invalid state!\";\r\n\r\n        Globals.currentState = state;\r\n        this.setState();\r\n    }\r\n\r\n    showPage(page) {\r\n        page.style.display = \"block\";\r\n    }\r\n\r\n    hidePage(page) {\r\n        page.style.display = \"none\";\r\n    }\r\n\r\n    hideAllPages() {\r\n\r\n        var gamePages = Globals.gamePages;\r\n    \r\n        this.hidePage(gamePages.travelPage);\r\n        this.hidePage(gamePages.campPage);\r\n        this.hidePage(gamePages.sleepPage);\r\n        this.hidePage(gamePages.huntPage);\r\n        this.hidePage(gamePages.healPage);\r\n        this.hidePage(gamePages.statsPage);\r\n        this.hidePage(gamePages.eventPage);\r\n        this.hidePage(gamePages.reportPage);\r\n        this.hidePage(gamePages.walkingPage);\r\n        this.hidePage(gamePages.gameOverPage);\r\n    }\r\n\r\n    setState() {\r\n\r\n        const gamePages = Globals.gamePages;\r\n        const gameStates = Globals.gameStates;\r\n\r\n        this.hideAllPages();\r\n\r\n        switch(Globals.currentState) {\r\n            case gameStates.TRAVEL: \r\n                this.showPage(gamePages.travelPage);\r\n                this.travel.start();\r\n            break;\r\n            case gameStates.CAMP: \r\n                this.showPage(gamePages.campPage);\r\n                this.camp.start();\r\n            break;\r\n            case gameStates.SLEEP: \r\n                this.showPage(gamePages.sleepPage);\r\n                // startSleep();\r\n            break;\r\n            case gameStates.HUNT: \r\n                this.showPage(gamePages.huntPage);\r\n                // startHunt();\r\n            break;\r\n            case gameStates.HEAL: \r\n                this.showPage(gamePages.healPage);\r\n                // startHeal();\r\n            break;\r\n            case gameStates.STATS: \r\n                this.showPage(gamePages.statsPage);\r\n                this.stats.start();\r\n            break;\r\n            case gameStates.EVENT: \r\n                this.showPage(gamePages.eventPage);\r\n                this.events.start();\r\n            break;\r\n            case gameStates.WALK:\r\n                this.showPage(gamePages.walkingPage);\r\n                // startWalk();\r\n            break;\r\n            case gameStates.REPORT:\r\n                this.showPage(gamePages.reportPage);\r\n                // startReport();\r\n            break;\r\n            case gameStates.GAME_OVER:\r\n                this.showPage(gamePages.gameOverPage);\r\n                // startGameOver();\r\n            break;\r\n        }\r\n    }\r\n}","import { Game } from './Game.js';\r\n\r\nconst game = new Game();\r\ngame.start();\r\n"]}