{"version":3,"sources":["js/entities/Character.js","js/Globals.js","js/managers/CampManager.js","js/entities/Event.js","js/managers/EventManager.js","js/managers/GameOverManager.js","js/managers/StatsManager.js","js/managers/CharacterManager.js","js/managers/TravelManager.js","js/managers/LogManager.js","js/GameManager.js","js/index.js"],"names":["Character","name","health","kinship","isDead","healthToLoose","tempLogs","push","Globals","currentDay","gameStates","TRAVEL","CAMP","STATS","EVENT","GAME_OVER","currentState","hours","characters","travelledDistance","distanceToGoal","logs","gamePages","travelPage","document","getElementById","campPage","statsPage","eventPage","gameOverPage","CampManager","game","campImg","querySelector","travelBtn","statsBtn","sleepBtn","huntBtn","healBtn","addEventListener","e","onClickTravel","onClickStats","goToState","SLEEP","HUNT","HEAL","Event","description","EventManager","reportPage","eventPageTitle","eventPageDescription","eventPageImage","eventPageYesBtn","eventPageNoBtn","onEventPageYesBtn","onEventPageNoBtn","events","randomIndex","getRandomArbitrary","length","event","showEvent","innerHTML","log","start","max","Math","floor","random","GameOverManager","gameOverMessage","livingCharacters","i","setGameOverMessage","message","StatsManager","currentCharacterIndex","getPageElements","showCharacters","nameField","healthField","backCharacterBtn","onClickBackCharacter","entries","index","character","CharacterManager","every","TravelManager","travelImage","travelledDistanceField","currentTimeField","progressBar","walkBtn","campBtn","onClickWalk","onClickCamp","characterManager","showTravelledDistance","showTime","startWalking","passHours","checkEvent","showLogs","clearLogs","walking","gotoNextHour","walkOneHour","gotoNextDay","min","increaseProgressBar","passOneHour","getRandomCharacter","looseHealth","checkIfAllCharactersAreDead","console","arrivedAtTheGoal","progressBarFullWidth","unity","style","width","x","stopWalking","LogManager","logList","GameManager","states","pages","camp","gameOver","stats","travel","hideAllPages","showPage","evt","state","setState","page","display","hidePage","LOG"],"mappings":"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","file":"js.68ae0973.map","sourceRoot":"..","sourcesContent":["import { Globals } from \"../Globals\";\r\n\r\nexport class Character {\r\n    \r\n    constructor(name, health, kinship) {\r\n        this.name = name;\r\n        this.health = health;\r\n        this.kinship = kinship;\r\n        this.isDead = false;\r\n    }\r\n\r\n    looseHealth(healthToLoose) {\r\n\r\n        if (this.health > 0) {\r\n            \r\n            this.health -= healthToLoose;\r\n\r\n            if (this.health <= 0) {\r\n                this.health = 0;\r\n                Globals.tempLogs.push(this.name + ' died at day ' + Globals.currentDay);\r\n                this.isDead = true;\r\n            } else {\r\n                Globals.tempLogs.push(this.name + ' lost -' + healthToLoose + ' health');\r\n            }\r\n        }\r\n    }\r\n}","import { Character } from '/js/entities/Character.js';\r\n\r\nexport let Globals = {\r\n    gameStates: {\r\n        TRAVEL: 1,\r\n        CAMP: 2,\r\n        STATS: 3,\r\n        EVENT: 4,\r\n        GAME_OVER: 5\r\n    },\r\n    currentState: 1,\r\n    currentDay: 0,\r\n    hours: 0,\r\n    characters: [],\r\n    travelledDistance: 0,\r\n    distanceToGoal: 300,\r\n    tempLogs: [],\r\n    logs: [],\r\n    gamePages: {\r\n        travelPage: document.getElementById(\"travel-page\"),\r\n        campPage: document.getElementById(\"camp-page\"),\r\n        statsPage: document.getElementById(\"stats-page\"),\r\n        eventPage: document.getElementById(\"event-page\"),\r\n        gameOverPage: document.getElementById(\"game-over-page\"),\r\n    }\r\n}\r\n\r\nGlobals.characters.push(new Character('Ethan', 5, 'father'));\r\nGlobals.characters.push(new Character('Olivia', 5, 'mother'));\r\nGlobals.characters.push(new Character('Michael', 5, 'son'));\r\nGlobals.characters.push(new Character('Sophia', 5, 'daughter'));\r\nGlobals.characters.push(new Character('Emma', 5, 'grandmother'));","import { Globals } from '../Globals.js';\r\n\r\nexport class CampManager {\r\n\r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.campImg = document.querySelector(\"#camp-img\");\r\n        this.travelBtn = document.querySelector(\"#travel-btn\");\r\n        this.statsBtn = document.querySelector(\"#stats-btn\");\r\n        this.sleepBtn = document.querySelector(\"#sleep-btn\");\r\n        this.huntBtn = document.querySelector(\"#hunt-btn\");\r\n        this.healBtn = document.querySelector(\"#heal-btn\");\r\n\r\n        this.travelBtn.addEventListener('click', (e) => { this.onClickTravel(e) });\r\n        this.statsBtn.addEventListener('click', (e) => { this.onClickStats(e) });\r\n    }\r\n\r\n    start() {\r\n        \r\n    } \r\n\r\n    onClickTravel() {\r\n        this.game.goToState(Globals.gameStates.TRAVEL);\r\n    }\r\n\r\n    onClickStats() {\r\n        this.game.goToState(Globals.gameStates.STATS);\r\n    }\r\n\r\n    onClickSleep() {\r\n        this.game.goToState(Globals.gameStates.SLEEP);\r\n    }\r\n\r\n    onClickHunt() {\r\n        this.game.goToState(Globals.gameStates.HUNT);\r\n    }\r\n\r\n    onClickHeal() {\r\n        this.game.goToState(Globals.gameStates.HEAL);\r\n    }\r\n}","import { Globals } from '../Globals.js';\r\n\r\nexport class Event {\r\n\r\n    constructor(name, description) {\r\n        this.name = name;\r\n        this.description = description;\r\n    }\r\n}","import { Event } from '../entities/Event.js';\r\nimport { Globals } from '../Globals.js';\r\n\r\nexport class EventManager {\r\n\r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.reportPage = document.getElementById(\"report-page\");\r\n        this.eventPageTitle = document.getElementById(\"event-page-title\");\r\n        this.eventPageDescription = document.getElementById(\"event-page-description\");\r\n        this.eventPageImage = document.getElementById(\"event-page-image\");\r\n        this.eventPageYesBtn = document.getElementById(\"event-page-yes-btn\");\r\n        this.eventPageNoBtn = document.getElementById(\"event-page-no-btn\");\r\n\r\n        this.eventPageYesBtn.addEventListener('click', (e) => { this.onEventPageYesBtn(e) });\r\n        this.eventPageNoBtn.addEventListener('click', (e) => { this.onEventPageNoBtn(e) });\r\n    }\r\n\r\n    start() {\r\n        let events = [new Event(\"Abandoned house\", \"No sign of life. Explore the house?\"), \r\n                      new Event(\"Wild Wolf Appeared\", \"Fight with the wolf?\")];\r\n        let randomIndex = this.getRandomArbitrary(events.length);\r\n\r\n        this.event = events[randomIndex];\r\n\r\n        this.showEvent();\r\n    }\r\n\r\n    showEvent() {\r\n        this.eventPageTitle.innerHTML = this.event.name;\r\n        this.eventPageDescription.innerHTML = this.event.description;\r\n    }\r\n\r\n    onEventPageYesBtn(e) {\r\n\r\n        if (Globals.tempLogs.length > 0) {\r\n            this.game.log.start();\r\n        } else {\r\n            this.game.goToState(Globals.gameStates.TRAVEL);\r\n        }\r\n    }\r\n\r\n    onEventPageNoBtn(e) {\r\n\r\n        if (Globals.tempLogs.length > 0) {\r\n            this.game.log.start();\r\n        } else {\r\n            this.game.goToState(Globals.gameStates.TRAVEL);\r\n        }\r\n    }\r\n\r\n    getRandomArbitrary(max) {\r\n        return Math.floor(Math.random() * max) \r\n    }\r\n}","import { Globals } from '../Globals.js';\r\n\r\nexport class GameOverManager {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.gameOverMessage = document.querySelector(\"#game-over-message\");\r\n    }\r\n\r\n    start() {\r\n\r\n        let livingCharacters = 0;\r\n\r\n        for (var i = 0; i < Globals.characters.length; i++){\r\n            const character = Globals.characters[i];\r\n\r\n            if (character.health > 0) {\r\n                livingCharacters++;\r\n            }\r\n        }\r\n\r\n        this.setGameOverMessage(livingCharacters + \" of \" + Globals.characters.length + \" survived!\");\r\n    }\r\n\r\n    setGameOverMessage(message) {\r\n        this.gameOverMessage.innerHTML = message;\r\n    }\r\n}","import { Globals } from '../Globals.js';\r\n\r\nexport class StatsManager {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n        this.currentCharacterIndex = 0;\r\n        this.characters = [];\r\n\r\n        this.getPageElements();\r\n    }\r\n\r\n    start() {\r\n        this.showCharacters();\r\n    }\r\n\r\n    getPageElements() {\r\n        \r\n        this.characters[0] = {};\r\n        this.characters[0].nameField = document.querySelector(\"#first-character-name-field\");\r\n        this.characters[0].healthField = document.querySelector(\"#first-character-health-field\");\r\n\r\n        this.characters[1] = {};\r\n        this.characters[1].nameField = document.querySelector(\"#second-character-name-field\");\r\n        this.characters[1].healthField = document.querySelector(\"#second-character-health-field\");\r\n\r\n        this.characters[2] = {};\r\n        this.characters[2].nameField = document.querySelector(\"#third-character-name-field\");\r\n        this.characters[2].healthField = document.querySelector(\"#third-character-health-field\");\r\n\r\n        this.characters[3] = {};\r\n        this.characters[3].nameField = document.querySelector(\"#fourth-character-name-field\");\r\n        this.characters[3].healthField = document.querySelector(\"#fourth-character-health-field\");\r\n\r\n        this.characters[4] = {};\r\n        this.characters[4].nameField = document.querySelector(\"#fifth-character-name-field\");\r\n        this.characters[4].healthField = document.querySelector(\"#fifth-character-health-field\");\r\n\r\n        this.backCharacterBtn = document.querySelector(\"#back-character-btn\");\r\n\r\n        this.backCharacterBtn.addEventListener('click', (e) => { this.onClickBackCharacter(e) });\r\n    }\r\n\r\n    showCharacters() {\r\n        let characters = Globals.characters;\r\n\r\n        for (let [index, character] of characters.entries()){\r\n            this.characters[index].nameField.innerHTML = 'Name: ' + character.name + ' - ' + character.kinship;\r\n            this.characters[index].healthField.innerHTML = character.isDead\r\n                                                        ? 'Is Dead'\r\n                                                        : 'Health: ' + character.health;\r\n        }\r\n    }\r\n\r\n    onClickBackCharacter() {\r\n        this.game.goToState(Globals.gameStates.TRAVEL);\r\n    }\r\n}","import { Globals } from '../Globals.js';\r\n\r\nexport class CharacterManager {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    checkIfAllCharactersAreDead() {\r\n        let characters = Globals.characters;\r\n\r\n        return characters.every((character) => character.isDead);\r\n    }\r\n}","import { Globals } from '../Globals.js';\r\nimport { CharacterManager } from './CharacterManager.js';\r\n\r\nexport class TravelManager {\r\n\r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.travelPage = document.querySelector(\"#travel-page\");\r\n        this.travelImage = document.querySelector(\"#travel-img\");\r\n        this.travelledDistanceField = document.querySelector(\"#travelled-distance\");\r\n        this.currentTimeField = document.querySelector(\"#current-time-field\");\r\n        this.progressBar = document.querySelector(\"#progress-bar\");\r\n        this.walkBtn = document.querySelector(\"#walk-btn\");\r\n        this.campBtn = document.querySelector(\"#camp-btn\");\r\n\r\n        this.walkBtn.addEventListener('click', (e) => { this.onClickWalk(e) });\r\n        this.campBtn.addEventListener('click', (e) => { this.onClickCamp(e) });\r\n        \r\n        this.characterManager = new CharacterManager();\r\n        this.showTravelledDistance();\r\n    }\r\n\r\n    start() {\r\n        Globals.currentDay++;\r\n        this.showTime();\r\n    }\r\n\r\n    onClickWalk(e) {\r\n        this.startWalking();\r\n        this.passHours(3);\r\n\r\n        const foundEvent = this.checkEvent();\r\n\r\n        if (foundEvent) {\r\n            this.game.goToState(Globals.gameStates.EVENT);\r\n        } else if (Globals.tempLogs.length > 0) {\r\n            this.game.log.showLogs();\r\n        } else {\r\n            this.game.log.clearLogs();\r\n        }\r\n    }\r\n\r\n    onClickCamp(e) {\r\n        this.game.goToState(Globals.gameStates.CAMP);\r\n    }\r\n\r\n    passHours(hours) {\r\n        for (let i = 0; i < hours; i++) {\r\n\r\n            if (!this.walking)\r\n                break;\r\n\r\n            this.gotoNextHour();\r\n        }\r\n    }\r\n\r\n    gotoNextHour() {\r\n        this.walkOneHour();\r\n\r\n        if (Globals.hours >= 24 ) {\r\n            Globals.hours = 0;\r\n            this.gotoNextDay();\r\n        }\r\n        this.showTime();\r\n    }\r\n\r\n    checkEvent() {\r\n        return this.getRandomArbitrary(1, 100) <= 25;\r\n    }\r\n\r\n    getRandomArbitrary(min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    gotoNextDay() {\r\n        Globals.currentDay++;\r\n        this.showTime();\r\n    }\r\n\r\n    passOneHour() {\r\n        Globals.hours++;\r\n        this.showTime();\r\n    }\r\n\r\n    showTime() {\r\n        this.currentTimeField.innerHTML = Globals.hours + ':00 - day ' + Globals.currentDay;\r\n\r\n        if(Globals.hours >= 18 || Globals.hours <= 6) {\r\n            this.currentTimeField.innerHTML += ' - night';\r\n        } else {\r\n            this.currentTimeField.innerHTML += ' - daylight';\r\n        }\r\n    }\r\n\r\n    walkOneHour() {\r\n        \r\n        Globals.travelledDistance += 2;\r\n        this.increaseProgressBar();\r\n\r\n        this.showTravelledDistance();\r\n        this.passOneHour();\r\n\r\n        Globals.characters[this.getRandomCharacter()].looseHealth(1);\r\n\r\n        let allPlayerAreDead = this.characterManager.checkIfAllCharactersAreDead();\r\n        if (allPlayerAreDead) \r\n            this.game.goToState(Globals.gameStates.GAME_OVER);\r\n\r\n        console.log(Globals.logs);\r\n        \r\n        if(Globals.travelledDistance > Globals.distanceToGoal) {\r\n            this.arrivedAtTheGoal();\r\n        }\r\n    }\r\n\r\n    increaseProgressBar() {\r\n        let progressBarFullWidth = 321;\r\n        let unity = progressBarFullWidth / Globals.distanceToGoal;\r\n        this.progressBar.style.width = Globals.travelledDistance * unity + 'px';\r\n    }\r\n\r\n    getRandomCharacter() {\r\n        let x = Math.floor(Math.random() * (Globals.characters.length));\r\n        return x;\r\n    }\r\n\r\n    showTravelledDistance() {\r\n        this.travelledDistanceField.innerHTML = 'Travelled distance: ' + Globals.travelledDistance + ' miles';\r\n    }\r\n\r\n    startWalking() {\r\n        this.walking = true;\r\n    }\r\n\r\n    stopWalking() {\r\n        this.walking = false;\r\n    }\r\n\r\n    arrivedAtTheGoal() {\r\n        this.stopWalking();\r\n        this.game.goToState(Globals.gameStates.GAME_OVER);\r\n    }\r\n}","import { Globals } from '../Globals.js';\r\n\r\nexport class LogManager {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n        this.logList = document.querySelector(\"#log-list\");\r\n    }\r\n\r\n    start() {\r\n        this.showLogs();\r\n    }\r\n\r\n    showLogs() {\r\n        let logs = \"\";\r\n\r\n        for (var i = 0; i < Globals.tempLogs.length; i++) {\r\n            logs += \"<li>\" + Globals.tempLogs[i] + \"</li>\";\r\n        }\r\n\r\n        Globals.logs = Globals.tempLogs;\r\n        Globals.tempLogs = [];\r\n\r\n        this.logList.innerHTML = logs;\r\n    }\r\n\r\n    clearLogs() {\r\n        this.logList.innerHTML = '';\r\n    }\r\n}","import { Globals } from './Globals.js';\r\nimport { CampManager } from './managers/CampManager.js';\r\nimport { EventManager } from './managers/EventManager.js';\r\nimport { GameOverManager } from './managers/GameOverManager.js';\r\nimport { StatsManager } from './managers/StatsManager.js';\r\nimport { TravelManager } from './managers/TravelManager.js';\r\nimport { LogManager } from './managers/LogManager.js';\r\n\r\nexport class GameManager {\r\n\r\n    constructor() {\r\n        this.states = Globals.gameStates;\r\n        this.pages = Globals.gamePages;\r\n\r\n        this.camp = new CampManager(this);\r\n        this.events = new EventManager(this);\r\n        this.gameOver = new GameOverManager(this);\r\n        this.stats = new StatsManager(this);\r\n        this.travel = new TravelManager(this);\r\n        this.log = new LogManager(this);\r\n    }\r\n\r\n    start() {\r\n        var gamePages = Globals.gamePages;\r\n    \r\n        this.hideAllPages();\r\n        this.showPage(gamePages.campPage);\r\n    }\r\n\r\n    onClick(evt) {\r\n        this.goToState(this.states.TRAVEL);\r\n    }\r\n\r\n    goToState(state) {\r\n\r\n        if (!state) throw \"Invalid state!\";\r\n\r\n        Globals.currentState = state;\r\n        this.setState();\r\n    }\r\n\r\n    showPage(page) {\r\n        page.style.display = \"block\";\r\n    }\r\n\r\n    hidePage(page) {\r\n        page.style.display = \"none\";\r\n    }\r\n\r\n    hideAllPages() {\r\n\r\n        var gamePages = Globals.gamePages;\r\n    \r\n        this.hidePage(gamePages.travelPage);\r\n        this.hidePage(gamePages.campPage);\r\n        this.hidePage(gamePages.statsPage);\r\n        this.hidePage(gamePages.eventPage);\r\n        this.hidePage(gamePages.gameOverPage);\r\n    }\r\n\r\n    setState() {\r\n\r\n        const gamePages = Globals.gamePages;\r\n        const gameStates = Globals.gameStates;\r\n\r\n        this.hideAllPages();\r\n\r\n        switch(Globals.currentState) {\r\n            case gameStates.TRAVEL: \r\n                this.showPage(gamePages.travelPage);\r\n                this.travel.start();\r\n            break;\r\n            case gameStates.CAMP: \r\n                this.showPage(gamePages.campPage);\r\n                this.camp.start();\r\n            break;\r\n            case gameStates.STATS: \r\n                this.showPage(gamePages.statsPage);\r\n                this.stats.start();\r\n            break;\r\n            case gameStates.EVENT: \r\n                this.showPage(gamePages.eventPage);\r\n                this.events.start();\r\n            break;\r\n            break;\r\n            case gameStates.LOG:\r\n                this.log.start();\r\n            break;\r\n            case gameStates.GAME_OVER:\r\n                this.showPage(gamePages.gameOverPage);\r\n                this.gameOver.start();\r\n            break;\r\n        }\r\n    }\r\n}","import { GameManager } from './GameManager.js';\r\n\r\nconst game = new GameManager();\r\ngame.start();\r\n"]}