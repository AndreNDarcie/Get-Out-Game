{"version":3,"sources":["src/managers/CampManager.ts","src/entities/Event.ts","src/managers/EventManager.ts","src/managers/GameOverManager.ts","src/managers/StatsManager.ts","src/managers/TravelManager.ts","src/managers/LogManager.ts","src/entities/Character.ts","src/managers/CharacterManager.ts","src/Game.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.7277c5b6.js","sourceRoot":"..","sourcesContent":["import { Game, GameStates } from '../Game';\r\n\r\nexport class CampManager {\r\n    campImg: Element;\r\n    travelBtn: Element;\r\n\r\n    constructor() {\r\n        this.campImg = document.querySelector(\"#camp-img\");\r\n        this.travelBtn = document.querySelector(\"#travel-btn\");\r\n\r\n        this.travelBtn.addEventListener('click', () => { this.onClickTravel() });\r\n    }\r\n\r\n    start() {\r\n    } \r\n\r\n    onClickTravel() {\r\n        Game.goToState(GameStates.TRAVEL);\r\n    }\r\n}","export enum EventType {\r\n    Exploration,\r\n    Combat\r\n}\r\n\r\nexport class Event {\r\n    name: string;\r\n    description: string;\r\n    type: EventType;\r\n\r\n    constructor(name: string, description: string, type: EventType) {\r\n        this.name = name;\r\n        this.description = description;\r\n        this.type = type;\r\n    }\r\n}","import { Event, EventType } from '../entities/Event';\r\nimport { Game, GameStates } from '../Game';\r\n\r\nexport class EventManager {\r\n    titleElement: HTMLElement;\r\n    descriptionElement: HTMLElement;\r\n    imageElement: HTMLElement;\r\n    yesButton: HTMLElement;\r\n    noButton: HTMLElement;\r\n    currentEvent: Event;\r\n\r\n    constructor() {\r\n        this.titleElement = document.getElementById(\"event-page-title\");\r\n        this.descriptionElement = document.getElementById(\"event-page-description\");\r\n        this.imageElement = document.getElementById(\"event-page-image\");\r\n        this.yesButton = document.getElementById(\"event-page-yes-btn\");\r\n        this.noButton = document.getElementById(\"event-page-no-btn\");\r\n\r\n        this.yesButton.addEventListener('click', () => { this.onEventPageYesBtn() });\r\n        this.noButton.addEventListener('click', () => { this.onEventPageNoBtn() });\r\n    }\r\n\r\n    start(): void {\r\n        let events = [new Event(\"Abandoned house\", \"No sign of life. Explore the house?\", EventType.Exploration), \r\n                      new Event(\"Wild Wolf Appeared\", \"Fight with the wolf?\", EventType.Combat)];\r\n        let randomIndex = this.getRandomArbitrary(events.length);\r\n\r\n        this.currentEvent = events[randomIndex];\r\n\r\n        this.showEvent();\r\n    }\r\n\r\n    showEvent(): void {\r\n        this.titleElement.innerHTML = this.currentEvent.name;\r\n        this.descriptionElement.innerHTML = this.currentEvent.description;\r\n    }\r\n\r\n    onEventPageYesBtn(): void {\r\n        let randomCharacterIndex = this.getRandomArbitrary(Game.characters.length);\r\n        let randomCharacter = Game.characters[randomCharacterIndex];\r\n\r\n        switch (this.currentEvent.type) {\r\n            case EventType.Exploration:\r\n                Game.tempLogs.push(randomCharacter.name + ' found food!');\r\n                break;\r\n            case EventType.Combat:\r\n                randomCharacter.looseHealth(1);\r\n                break;\r\n        }\r\n\r\n        if (Game.tempLogs.length > 0) {\r\n            Game.log.start();\r\n        }\r\n\r\n        Game.goToState(GameStates.TRAVEL);\r\n    }\r\n\r\n    onEventPageNoBtn(): void {\r\n\r\n        if (Game.tempLogs.length > 0) {\r\n            Game.log.start();\r\n        } else {\r\n            Game.goToState(GameStates.TRAVEL);\r\n        }\r\n    }\r\n\r\n    getRandomArbitrary(max: number): number {\r\n        return Math.floor(Math.random() * max) \r\n    }\r\n}","import { Game } from '../Game';\r\n\r\nexport class GameOverManager {\r\n    gameOverMessage: Element;\r\n\r\n    constructor() {\r\n        this.gameOverMessage = document.querySelector(\"#game-over-message\");\r\n    }\r\n\r\n    start(): void {\r\n        let livingCharacters = 0;\r\n\r\n        for (var i = 0; i < Game.characters.length; i++){\r\n            const character = Game.characters[i];\r\n\r\n            if (character.health > 0) {\r\n                livingCharacters++;\r\n            }\r\n        }\r\n\r\n        this.setGameOverMessage(livingCharacters + \" of \" + Game.characters.length + \" survived!\");\r\n    }\r\n\r\n    setGameOverMessage(message: string): void {\r\n        this.gameOverMessage.innerHTML = message;\r\n    }\r\n}","import { Game, GameStates } from '../Game';\r\n\r\nexport class StatsManager {\r\n    currentCharacterIndex: number;\r\n    charactersList: any;\r\n    backCharacterBtn: Element;\r\n\r\n    constructor() {\r\n        this.currentCharacterIndex = 0;\r\n        this.charactersList = [];\r\n\r\n        this.getPageElements();\r\n    }\r\n\r\n    start(): void {\r\n        this.showCharacters();\r\n    }\r\n\r\n    getPageElements(): void {\r\n        \r\n        this.charactersList[0] = {};\r\n        this.charactersList[0].nameField = document.querySelector(\"#first-character-name-field\");\r\n        this.charactersList[0].healthField = document.querySelector(\"#first-character-health-field\");\r\n        this.charactersList[0].atributesField = document.querySelector(\"#first-character-atributes-field\");\r\n\r\n        this.charactersList[1] = {};\r\n        this.charactersList[1].nameField = document.querySelector(\"#second-character-name-field\");\r\n        this.charactersList[1].healthField = document.querySelector(\"#second-character-health-field\");\r\n        this.charactersList[1].atributesField = document.querySelector(\"#second-character-atributes-field\");\r\n\r\n        this.charactersList[2] = {};\r\n        this.charactersList[2].nameField = document.querySelector(\"#third-character-name-field\");\r\n        this.charactersList[2].healthField = document.querySelector(\"#third-character-health-field\");\r\n        this.charactersList[2].atributesField = document.querySelector(\"#third-character-atributes-field\");\r\n\r\n        this.charactersList[3] = {};\r\n        this.charactersList[3].nameField = document.querySelector(\"#fourth-character-name-field\");\r\n        this.charactersList[3].healthField = document.querySelector(\"#fourth-character-health-field\");\r\n        this.charactersList[3].atributesField = document.querySelector(\"#fourth-character-atributes-field\");\r\n\r\n        this.charactersList[4] = {};\r\n        this.charactersList[4].nameField = document.querySelector(\"#fifth-character-name-field\");\r\n        this.charactersList[4].healthField = document.querySelector(\"#fifth-character-health-field\");\r\n        this.charactersList[4].atributesField = document.querySelector(\"#fifth-character-atributes-field\");\r\n\r\n        this.backCharacterBtn = document.querySelector(\"#back-character-btn\");\r\n        this.backCharacterBtn.addEventListener('click', () => { this.onClickBackCharacter() });\r\n    }\r\n\r\n    showCharacters(): void {\r\n        let characters = Game.characters;\r\n\r\n        for (let i = 0; i < characters.length; i++){\r\n            let character = characters[i];\r\n            this.charactersList[i].nameField.innerHTML = character.name + ' - ' + character.kinship;\r\n            this.charactersList[i].healthField.innerHTML = character.isDead\r\n                                                        ? 'Is Dead'\r\n                                                        : 'Health: ' + character.health;\r\n            this.charactersList[i].atributesField.innerHTML = (character.sick ? ' [SICK] ' : '') +\r\n                                                              (character.hungry ? ' [HUNGRY] ' : '') +\r\n                                                              (character.cold ? ' [COLD] ' : '');\r\n        }\r\n    }\r\n\r\n    onClickBackCharacter(): void {\r\n        Game.goToState(GameStates.TRAVEL);\r\n    }\r\n}","import { Game, GameStates } from '../Game';\r\n\r\nexport class TravelManager {\r\n    travelPage: Element;\r\n    travelImage: Element;\r\n    travelledDistanceField: Element;\r\n    currentTimeField: Element;\r\n    progressBar: HTMLElement;\r\n    walkBtn: Element;\r\n    campBtn: Element;\r\n    statsBtn: Element;\r\n    walking: boolean;\r\n\r\n    constructor() {\r\n        this.travelPage = document.querySelector(\"#travel-page\");\r\n        this.travelImage = document.querySelector(\"#travel-img\");\r\n        this.travelledDistanceField = document.querySelector(\"#travelled-distance\");\r\n        this.currentTimeField = document.querySelector(\"#current-time-field\");\r\n        this.progressBar = document.getElementById(\"progress-bar\");\r\n        this.walkBtn = document.querySelector(\"#walk-btn\");\r\n        this.campBtn = document.querySelector(\"#camp-btn\");\r\n        this.statsBtn = document.querySelector(\"#stats-btn\");\r\n\r\n        this.walkBtn.addEventListener('click', () => { this.onClickWalkBtn() });\r\n        this.campBtn.addEventListener('click', () => { this.onClickCampBtn() });\r\n        this.statsBtn.addEventListener('click', () => { this.onClickStatsBtn() });\r\n\r\n        this.showTravelledDistance();\r\n    }\r\n\r\n    start(): void {\r\n        Game.currentDay++;\r\n        this.showTime();\r\n        Game.log.showLogs();\r\n    }\r\n\r\n    onClickWalkBtn(): void {\r\n        this.startWalking();\r\n        this.passHours(3);\r\n\r\n        const foundEvent = this.checkEvent();\r\n\r\n        if (foundEvent) {\r\n            Game.goToState(GameStates.EVENT);\r\n        } else if (Game.tempLogs.length > 0) {\r\n            Game.log.showLogs();\r\n        } else {\r\n            Game.log.clearLogs();\r\n        }\r\n    }\r\n\r\n    onClickCampBtn(): void {\r\n        Game.goToState(GameStates.CAMP);\r\n    }\r\n\r\n    onClickStatsBtn() {\r\n        Game.goToState(GameStates.STATS);\r\n    }\r\n\r\n    passHours(hours: number): void {\r\n        for (let i = 0; i < hours; i++) {\r\n\r\n            if (!this.walking)\r\n                break;\r\n\r\n            this.gotoNextHour();\r\n        }\r\n    }\r\n\r\n    gotoNextHour() {\r\n        this.walkOneHour();\r\n\r\n        if (Game.hours >= 24 ) {\r\n            Game.hours = 0;\r\n            this.gotoNextDay();\r\n        }\r\n        this.showTime();\r\n    }\r\n\r\n    checkEvent() {\r\n        return this.getRandomArbitrary(1, 100) <= 25;\r\n    }\r\n\r\n    getRandomArbitrary(min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    gotoNextDay() {\r\n        Game.currentDay++;\r\n        this.showTime();\r\n    }\r\n\r\n    passOneHour() {\r\n        Game.hours++;\r\n        this.showTime();\r\n    }\r\n\r\n    showTime() {\r\n        this.currentTimeField.innerHTML = Game.hours + ':00 - day ' + Game.currentDay;\r\n\r\n        if(Game.hours >= 18 || Game.hours <= 6) {\r\n            this.currentTimeField.innerHTML += ' - night';\r\n        } else {\r\n            this.currentTimeField.innerHTML += ' - daylight';\r\n        }\r\n    }\r\n\r\n    walkOneHour() {\r\n        \r\n        Game.travelledDistance += 2;\r\n        this.increaseProgressBar();\r\n\r\n        this.showTravelledDistance();\r\n        this.passOneHour();\r\n\r\n        let allPlayerAreDead = Game.characterManager.checkIfAllCharactersAreDead();\r\n        if (allPlayerAreDead) \r\n            Game.goToState(GameStates.GAME_OVER);\r\n        \r\n        if(Game.travelledDistance > Game.distanceToGoal) {\r\n            this.arrivedAtTheGoal();\r\n        }\r\n    }\r\n\r\n    increaseProgressBar() {\r\n        let progressBarFullWidth = 321;\r\n        let unity = progressBarFullWidth / Game.distanceToGoal;\r\n        this.progressBar.style.width = Game.travelledDistance * unity + 'px';\r\n    }\r\n\r\n    getRandomCharacter() {\r\n        let x = Math.floor(Math.random() * (Game.characters.length));\r\n        return x;\r\n    }\r\n\r\n    showTravelledDistance() {\r\n        this.travelledDistanceField.innerHTML = 'Travelled distance: ' + Game.travelledDistance + ' miles';\r\n    }\r\n\r\n    startWalking() {\r\n        this.walking = true;\r\n    }\r\n\r\n    stopWalking() {\r\n        this.walking = false;\r\n    }\r\n\r\n    arrivedAtTheGoal() {\r\n        this.stopWalking();\r\n        Game.goToState(GameStates.GAME_OVER);\r\n    }\r\n}","import { Game } from '../Game';\r\n\r\nexport class LogManager {\r\n    logList: Element;\r\n\r\n    constructor() {\r\n        this.logList = document.querySelector(\"#log-list\");\r\n    }\r\n\r\n    start(): void {\r\n        this.showLogs();\r\n    }\r\n\r\n    showLogs(): void {\r\n        if(Game.tempLogs.length <= 0) return;\r\n\r\n        let logs = \"\";\r\n\r\n        for (var i = 0; i < Game.tempLogs.length; i++) {\r\n            logs += \"<li>\" + Game.tempLogs[i] + \"</li>\";\r\n        }\r\n\r\n        Game.logs = Game.tempLogs;\r\n        Game.tempLogs = [];\r\n\r\n        this.logList.innerHTML = logs;\r\n    }\r\n\r\n    clearLogs(): void {\r\n        this.logList.innerHTML = '';\r\n    }\r\n\r\n    log(text: string): void {\r\n        Game.tempLogs.push(text);\r\n    }\r\n}","import { Game } from '../Game';\r\n\r\nexport class Character {\r\n    name: string;\r\n    health: number;\r\n    kinship: string;\r\n    isDead: boolean = false;\r\n    sick: boolean = false;\r\n    hungry: boolean = false;\r\n    cold: boolean = false;\r\n    maxHealth: number;\r\n\r\n    constructor(name: string, health: number, kinship: string, sick: boolean, hungry: boolean, cold: boolean) {\r\n        this.name = name;\r\n        this.health = health;\r\n        this.kinship = kinship;\r\n        this.isDead = false;\r\n        this.sick = sick;\r\n        this.hungry = hungry;\r\n        this.cold = cold;\r\n        this.maxHealth = health;\r\n    }\r\n\r\n    looseHealth(healthToLoose: number): void {\r\n        if (healthToLoose < 0 || healthToLoose > this.maxHealth) {\r\n            throw new Error('Invalid value for healthToLoose');\r\n        }\r\n\r\n        if (this.health > 0) {\r\n            this.health -= healthToLoose;\r\n\r\n            if (this.health <= 0) {\r\n                this.health = 0;\r\n                Game.tempLogs.push(this.name + ' died at day ' + Game.currentDay);\r\n                this.isDead = true;\r\n            } else {\r\n                Game.tempLogs.push(this.name + ' lost -' + healthToLoose + ' health');\r\n            }\r\n        }\r\n    }\r\n}","import { Game } from '../Game';\r\n\r\nexport class CharacterManager {\r\n    constructor() {\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    checkIfAllCharactersAreDead(): boolean {\r\n        let characters = Game.characters;\r\n\r\n        return characters.every((character) => character.isDead);\r\n    }\r\n}","import { CampManager } from './managers/CampManager';\r\nimport { EventManager } from './managers/EventManager';\r\nimport { GameOverManager } from './managers/GameOverManager';\r\nimport { StatsManager } from './managers/StatsManager';\r\nimport { TravelManager } from './managers/TravelManager';\r\nimport { LogManager } from './managers/LogManager';\r\nimport { Character } from './entities/Character';\r\nimport { CharacterManager } from './managers/CharacterManager';\r\n\r\nexport enum GameStates {\r\n    TRAVEL,\r\n    CAMP,\r\n    STATS,\r\n    EVENT,\r\n    GAME_OVER,\r\n    LOG\r\n}\r\n\r\nexport class Game {\r\n    static states: GameStates;\r\n    static currentState: number = 1;\r\n    static currentDay:number = 0;\r\n    static hours: number = 0;\r\n    static characters: Character[] = [];\r\n    static travelledDistance: number = 0;\r\n    static distanceToGoal: number = 300;\r\n    static tempLogs: string[] = [];\r\n    static logs: string[] = [];\r\n    static travelPage: HTMLElement;\r\n    static campPage: HTMLElement;\r\n    static statsPage: HTMLElement;\r\n    static eventPage: HTMLElement;\r\n    static gameOverPage: HTMLElement;\r\n    static camp: CampManager;\r\n    static events: EventManager;\r\n    static gameOver: GameOverManager;\r\n    static stats: StatsManager;\r\n    static travel: TravelManager;\r\n    static log: LogManager;\r\n    static characterManager: CharacterManager;\r\n\r\n    constructor() {\r\n        Game.travelPage = document.getElementById(\"travel-page\"),\r\n        Game.campPage = document.getElementById(\"camp-page\"),\r\n        Game.statsPage = document.getElementById(\"stats-page\"),\r\n        Game.eventPage = document.getElementById(\"event-page\"),\r\n        Game.gameOverPage = document.getElementById(\"game-over-page\")\r\n\r\n        Game.camp = new CampManager();\r\n        Game.events = new EventManager();\r\n        Game.gameOver = new GameOverManager();\r\n        Game.stats = new StatsManager();\r\n        Game.travel = new TravelManager();\r\n        Game.log = new LogManager();\r\n        Game.characterManager = new CharacterManager();\r\n    }\r\n\r\n    start() {\r\n        Game.createAllCharacters();\r\n        Game.hideAllPages();\r\n        Game.showPage(Game.campPage);\r\n    }\r\n\r\n    static createAllCharacters() {\r\n        Game.characters.push(new Character('Ethan', 5, 'father', true, false, false));\r\n        Game.characters.push(new Character('Olivia', 5, 'mother', false, true, true));\r\n        Game.characters.push(new Character('Michael', 5, 'son', true, true, true));\r\n        Game.characters.push(new Character('Sophia', 5, 'daughter', false, false, false));\r\n        Game.characters.push(new Character('Emma', 5, 'grandmother', true, true, false));\r\n    }\r\n\r\n    static goToState(state: GameStates) {\r\n        Game.currentState = state;\r\n        this.setState();\r\n    }\r\n\r\n    static showPage(page) {\r\n        page.style.display = \"block\";\r\n    }\r\n\r\n    static hidePage(page) {\r\n        page.style.display = \"none\";\r\n    }\r\n\r\n    static hideAllPages() {\r\n        this.hidePage(Game.travelPage);\r\n        this.hidePage(Game.campPage);\r\n        this.hidePage(Game.statsPage);\r\n        this.hidePage(Game.eventPage);\r\n        this.hidePage(Game.gameOverPage);\r\n    }\r\n\r\n    static setState() {\r\n        this.hideAllPages();\r\n\r\n        switch(Game.currentState) {\r\n            case GameStates.TRAVEL: \r\n                this.showPage(Game.travelPage);\r\n                Game.travel.start();\r\n            break;\r\n            case GameStates.CAMP: \r\n                this.showPage(Game.campPage);\r\n                Game.camp.start();\r\n            break;\r\n            case GameStates.STATS: \r\n                this.showPage(Game.statsPage);\r\n                Game.stats.start();\r\n            break;\r\n            case GameStates.EVENT: \r\n                this.showPage(Game.eventPage);\r\n                Game.events.start();\r\n            break;\r\n            case GameStates.LOG:\r\n                Game.log.start();\r\n            break;\r\n            case GameStates.GAME_OVER:\r\n                this.showPage(Game.gameOverPage);\r\n                Game.gameOver.start();\r\n            break;\r\n        }\r\n    }\r\n}","import { Game } from './Game';\r\n\r\nconst game = new Game();\r\ngame.start();\r\n"]}