{"version":3,"sources":["js/entities/Character.js","js/globals.js","js/managers/Camp.js","js/managers/Event.js","js/managers/Events.js","js/managers/GameOver.js","js/managers/Heal.js","js/managers/Hunt.js","js/managers/Report.js","js/managers/Sleep.js","js/managers/Stats.js","js/managers/Travel.js","js/managers/Walk.js","js/managers/Log.js","js/Game.js","js/index.js"],"names":["Character","name","health","kinship","healthToLoose","tempLogs","push","Globals","currentDay","gameStates","TRAVEL","CAMP","SLEEP","HUNT","HEAL","STATS","EVENT","WALKING","REPORT","GAME_OVER","currentState","hours","characters","travelledDistance","distanceToGoal","logs","gamePages","travelPage","document","getElementById","campPage","sleepPage","huntPage","healPage","statsPage","eventPage","walkingPage","reportPage","gameOverPage","Camp","game","campImg","querySelector","travelBtn","statsBtn","sleepBtn","huntBtn","healBtn","addEventListener","e","onClickTravel","onClickStats","onClickSleep","onClickHunt","onClickHeal","goToState","Event","description","Events","eventPageTitle","eventPageDescription","eventPageImage","eventPageYesBtn","eventPageNoBtn","onEventPageYesBtn","onEventPageNoBtn","events","randomIndex","getRandomArbitrary","length","event","showEvent","innerHTML","log","start","max","Math","floor","random","GameOver","gameOverMessage","livingCharacters","i","setGameOverMessage","message","Heal","Hunt","Report","Sleep","Stats","currentCharacterIndex","getPageElements","showCurrentCharacter","nameField","kinshipField","thinkingField","healthField","woundsField","hungerField","fatigueField","feelingField","itemField","previousCharacterBtn","nextCharacterBtn","backCharacterBtn","onClickPreviousCharacter","onClickNextCharacter","onClickBackCharacter","currentCharacter","Travel","travelImage","travelledDistanceField","currentTimeField","progressBar","walkBtn","campBtn","onClickWalk","onClickCamp","showTravelledDistance","showTime","startWalking","passHours","checkEvent","showLogs","clearLogs","walking","gotoNextHour","walkOneHour","gotoNextDay","min","increaseProgressBar","passOneHour","getRandomCharacter","looseHealth","console","arrivedAtTheGoal","progressBarFullWidth","unity","style","width","x","stopWalking","Walk","Log","logList","Game","states","pages","camp","gameOver","heal","hunt","report","sleep","stats","travel","walk","hideAllPages","showPage","evt","state","setState","page","display","hidePage","WALK","LOG"],"mappings":"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","file":"js.3ddc1b36.map","sourceRoot":"..","sourcesContent":["import { Globals } from \"../globals\";\r\n\r\nexport class Character {\r\n    \r\n    constructor(name, health, kinship) {\r\n        this.name = name;\r\n        this.health = health;\r\n        this.kinship = kinship;\r\n    }\r\n\r\n    looseHealth(healthToLoose) {\r\n\r\n        if (this.health > 0) {\r\n            \r\n            this.health -= healthToLoose;\r\n\r\n            if (this.health <= 0) {\r\n                this.health = 0;\r\n                Globals.tempLogs.push(this.name + ' died at day ' + Globals.currentDay);\r\n            } else {\r\n                Globals.tempLogs.push(this.name + ' lost -' + healthToLoose + ' health');\r\n            }\r\n        }\r\n    }\r\n}","import { Character } from '/js/entities/Character.js';\r\n\r\nexport let Globals = {\r\n    gameStates: {\r\n        TRAVEL: 1,\r\n        CAMP: 2,\r\n        SLEEP: 3,\r\n        HUNT: 4,\r\n        HEAL: 5,\r\n        STATS: 6,\r\n        EVENT: 7,\r\n        WALKING: 8,\r\n        REPORT: 9,\r\n        GAME_OVER: 10\r\n    },\r\n    currentState: 1,\r\n    currentDay: 0,\r\n    hours: 0,\r\n    characters: [],\r\n    travelledDistance: 0,\r\n    distanceToGoal: 300,\r\n    tempLogs: [],\r\n    logs: [],\r\n    gamePages: {\r\n        travelPage: document.getElementById(\"travel-page\"),\r\n        campPage: document.getElementById(\"camp-page\"),\r\n        sleepPage: document.getElementById(\"sleep-page\"),\r\n        huntPage: document.getElementById(\"hunt-page\"),\r\n        healPage: document.getElementById(\"heal-page\"),\r\n        statsPage: document.getElementById(\"stats-page\"),\r\n        eventPage: document.getElementById(\"event-page\"),\r\n        walkingPage: document.getElementById(\"walking-page\"),\r\n        reportPage: document.getElementById(\"report-page\"),\r\n        gameOverPage: document.getElementById(\"game-over-page\"),\r\n    }\r\n}\r\n\r\nGlobals.characters.push(new Character('Ethan', 5, 'father'));\r\nGlobals.characters.push(new Character('Olivia', 5, 'mother'));\r\nGlobals.characters.push(new Character('Michael', 5, 'son'));\r\nGlobals.characters.push(new Character('Sophia', 5, 'daughter'));\r\nGlobals.characters.push(new Character('Emma', 5, 'grandmother'));","import { Globals } from '../globals.js';\r\n\r\nexport class Camp {\r\n\r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.campImg = document.querySelector(\"#camp-img\");\r\n        this.travelBtn = document.querySelector(\"#travel-btn\");\r\n        this.statsBtn = document.querySelector(\"#stats-btn\");\r\n        this.sleepBtn = document.querySelector(\"#sleep-btn\");\r\n        this.huntBtn = document.querySelector(\"#hunt-btn\");\r\n        this.healBtn = document.querySelector(\"#heal-btn\");\r\n\r\n        this.travelBtn.addEventListener('click', (e) => { this.onClickTravel(e) });\r\n        this.statsBtn.addEventListener('click', (e) => { this.onClickStats(e) });\r\n        this.sleepBtn.addEventListener('click', (e) => { this.onClickSleep(e) });\r\n        this.huntBtn.addEventListener('click', (e) => { this.onClickHunt(e) });\r\n        this.healBtn.addEventListener('click', (e) => { this.onClickHeal(e) });\r\n    }\r\n\r\n    start() {\r\n        \r\n    } \r\n\r\n    onClickTravel() {\r\n        this.game.goToState(Globals.gameStates.TRAVEL);\r\n    }\r\n\r\n    onClickStats() {\r\n        this.game.goToState(Globals.gameStates.STATS);\r\n    }\r\n\r\n    onClickSleep() {\r\n        this.game.goToState(Globals.gameStates.SLEEP);\r\n    }\r\n\r\n    onClickHunt() {\r\n        this.game.goToState(Globals.gameStates.HUNT);\r\n    }\r\n\r\n    onClickHeal() {\r\n        this.game.goToState(Globals.gameStates.HEAL);\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Event {\r\n\r\n    constructor(name, description) {\r\n        this.name = name;\r\n        this.description = description;\r\n    }\r\n}","import { Event } from './Event.js';\r\nimport { Globals } from '../globals.js';\r\n\r\nexport class Events {\r\n\r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.reportPage = document.getElementById(\"report-page\");\r\n        this.eventPageTitle = document.getElementById(\"event-page-title\");\r\n        this.eventPageDescription = document.getElementById(\"event-page-description\");\r\n        this.eventPageImage = document.getElementById(\"event-page-image\");\r\n        this.eventPageYesBtn = document.getElementById(\"event-page-yes-btn\");\r\n        this.eventPageNoBtn = document.getElementById(\"event-page-no-btn\");\r\n\r\n        this.eventPageYesBtn.addEventListener('click', (e) => { this.onEventPageYesBtn(e) });\r\n        this.eventPageNoBtn.addEventListener('click', (e) => { this.onEventPageNoBtn(e) });\r\n    }\r\n\r\n    start() {\r\n        let events = [new Event(\"Abandoned house\", \"No sign of life. Explore the house?\"), \r\n                      new Event(\"Wild Wolf Appeared\", \"Fight with the wolf?\")];\r\n        let randomIndex = this.getRandomArbitrary(events.length);\r\n\r\n        this.event = events[randomIndex];\r\n\r\n        this.showEvent();\r\n    }\r\n\r\n    showEvent() {\r\n        this.eventPageTitle.innerHTML = this.event.name;\r\n        this.eventPageDescription.innerHTML = this.event.description;\r\n    }\r\n\r\n    onEventPageYesBtn(e) {\r\n\r\n        if (Globals.tempLogs.length > 0) {\r\n            this.game.log.start();\r\n        } else {\r\n            this.game.goToState(Globals.gameStates.TRAVEL);\r\n        }\r\n    }\r\n\r\n    onEventPageNoBtn(e) {\r\n\r\n        if (Globals.tempLogs.length > 0) {\r\n            this.game.log.start();\r\n        } else {\r\n            this.game.goToState(Globals.gameStates.TRAVEL);\r\n        }\r\n    }\r\n\r\n    getRandomArbitrary(max) {\r\n        return Math.floor(Math.random() * max) \r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class GameOver {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.gameOverMessage = document.querySelector(\"#game-over-message\");\r\n    }\r\n\r\n    start() {\r\n\r\n        let livingCharacters = 0;\r\n\r\n        for (var i = 0; i < Globals.characters.length; i++){\r\n            const character = Globals.characters[i];\r\n\r\n            if (character.health > 0) {\r\n                livingCharacters++;\r\n            }\r\n        }\r\n\r\n        this.setGameOverMessage(livingCharacters + \" of \" + Globals.characters.length + \" survived!\");\r\n    }\r\n\r\n    setGameOverMessage(message) {\r\n        this.gameOverMessage.innerHTML = message;\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Heal {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Hunt {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Report {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Sleep {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Stats {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n        this.currentCharacterIndex = 0;\r\n\r\n        this.getPageElements();\r\n    }\r\n\r\n    start() {\r\n        this.showCurrentCharacter();\r\n    }\r\n\r\n    getPageElements() {\r\n\r\n        this.nameField = document.querySelector(\"#name-field\");\r\n        this.kinshipField = document.querySelector(\"#kinship-field\");\r\n        this.thinkingField = document.querySelector(\"#thinking-field\");\r\n        this.healthField = document.querySelector(\"#health-field\");\r\n        this.woundsField = document.querySelector(\"#wounds-field\");\r\n        this.hungerField = document.querySelector(\"#hunger-field\");\r\n        this.fatigueField = document.querySelector(\"#fatigue-field\");\r\n        this.feelingField = document.querySelector(\"#feeling-field\");\r\n        this.itemField = document.querySelector(\"#item-field\");\r\n        this.previousCharacterBtn = document.querySelector(\"#previous-character-btn\");\r\n        this.nextCharacterBtn = document.querySelector(\"#next-character-btn\");\r\n        this.backCharacterBtn = document.querySelector(\"#back-character-btn\");\r\n\r\n        this.previousCharacterBtn.addEventListener('click', (e) => { this.onClickPreviousCharacter(e) });\r\n        this.nextCharacterBtn.addEventListener('click', (e) => { this.onClickNextCharacter(e) });\r\n        this.backCharacterBtn.addEventListener('click', (e) => { this.onClickBackCharacter(e) });\r\n    }\r\n\r\n    onClickPreviousCharacter() {\r\n\r\n        if (this.currentCharacterIndex > 0) {\r\n            this.currentCharacterIndex--;\r\n        }\r\n\r\n        this.showCurrentCharacter();\r\n    }\r\n\r\n    onClickNextCharacter() {\r\n\r\n        if (this.currentCharacterIndex < (Globals.characters.length - 1)) {\r\n            this.currentCharacterIndex++;\r\n        }\r\n\r\n        this.showCurrentCharacter();\r\n    }\r\n\r\n    showCurrentCharacter() {\r\n        let currentCharacter = Globals.characters[this.currentCharacterIndex];\r\n        this.nameField.innerHTML = 'Name: ' + currentCharacter.name;\r\n        this.healthField.innerHTML = 'Health: ' + ((currentCharacter.health <= 0) ? 'Is dead' : currentCharacter.health);\r\n        this.kinshipField.innerHTML = 'Kinship: ' + currentCharacter.kinship;\r\n    }\r\n\r\n    onClickBackCharacter() {\r\n        this.game.goToState(Globals.gameStates.CAMP);\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Travel {\r\n\r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n        this.travelPage = document.querySelector(\"#travel-page\");\r\n        this.travelImage = document.querySelector(\"#travel-img\");\r\n        this.travelledDistanceField = document.querySelector(\"#travelled-distance\");\r\n        this.currentTimeField = document.querySelector(\"#current-time-field\");\r\n        this.progressBar = document.querySelector(\"#progress-bar\");\r\n        this.walkBtn = document.querySelector(\"#walk-btn\");\r\n        this.campBtn = document.querySelector(\"#camp-btn\");\r\n\r\n        this.walkBtn.addEventListener('click', (e) => { this.onClickWalk(e) });\r\n        this.campBtn.addEventListener('click', (e) => { this.onClickCamp(e) });\r\n\r\n        this.showTravelledDistance();\r\n    }\r\n\r\n    start() {\r\n        Globals.currentDay++;\r\n        this.showTime();\r\n    }\r\n\r\n    onClickWalk(e) {\r\n        this.startWalking();\r\n        this.passHours(3);\r\n\r\n        const foundEvent = this.checkEvent();\r\n\r\n        if (foundEvent) {\r\n            this.game.goToState(Globals.gameStates.EVENT);\r\n        } else if (Globals.tempLogs.length > 0) {\r\n            this.game.log.showLogs();\r\n        } else {\r\n            this.game.log.clearLogs();\r\n        }\r\n    }\r\n\r\n    onClickCamp(e) {\r\n        this.game.goToState(Globals.gameStates.CAMP);\r\n    }\r\n\r\n    passHours(hours) {\r\n        for (let i = 0; i < hours; i++) {\r\n\r\n            if (!this.walking)\r\n                break;\r\n\r\n            this.gotoNextHour();\r\n        }\r\n    }\r\n\r\n    gotoNextHour() {\r\n        this.walkOneHour();\r\n\r\n        if (Globals.hours >= 24 ) {\r\n            Globals.hours = 0;\r\n            this.gotoNextDay();\r\n        }\r\n        this.showTime();\r\n    }\r\n\r\n    checkEvent() {\r\n        return this.getRandomArbitrary(1, 100) <= 25;\r\n    }\r\n\r\n    getRandomArbitrary(min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    gotoNextDay() {\r\n        Globals.currentDay++;\r\n        this.showTime();\r\n    }\r\n\r\n    passOneHour() {\r\n        Globals.hours++;\r\n        this.showTime();\r\n    }\r\n\r\n    showTime() {\r\n        this.currentTimeField.innerHTML = Globals.hours + ':00 - day ' + Globals.currentDay;\r\n\r\n        if(Globals.hours >= 18 || Globals.hours <= 6) {\r\n            this.currentTimeField.innerHTML += ' - night';\r\n        } else {\r\n            this.currentTimeField.innerHTML += ' - daylight';\r\n        }\r\n    }\r\n\r\n    walkOneHour() {\r\n        \r\n        Globals.travelledDistance += 2;\r\n        this.increaseProgressBar();\r\n\r\n        this.showTravelledDistance();\r\n        this.passOneHour();\r\n        Globals.characters[this.getRandomCharacter()].looseHealth(1);\r\n\r\n        console.log(Globals.logs);\r\n        \r\n        if(Globals.travelledDistance > Globals.distanceToGoal) {\r\n            this.arrivedAtTheGoal();\r\n        }\r\n    }\r\n\r\n    increaseProgressBar() {\r\n        let progressBarFullWidth = 321;\r\n        let unity = progressBarFullWidth / Globals.distanceToGoal;\r\n        this.progressBar.style.width = Globals.travelledDistance * unity + 'px';\r\n    }\r\n\r\n    getRandomCharacter() {\r\n        let x = Math.floor(Math.random() * (Globals.characters.length - 1));\r\n        return x;\r\n    }\r\n\r\n    showTravelledDistance() {\r\n        this.travelledDistanceField.innerHTML = 'Travelled distance: ' + Globals.travelledDistance + ' miles';\r\n    }\r\n\r\n    startWalking() {\r\n        this.walking = true;\r\n    }\r\n\r\n    stopWalking() {\r\n        this.walking = false;\r\n    }\r\n\r\n    arrivedAtTheGoal() {\r\n        this.stopWalking();\r\n        this.game.goToState(Globals.gameStates.GAME_OVER);\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Walk {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n}","import { Globals } from '../globals.js';\r\n\r\nexport class Log {\r\n    \r\n    constructor(game) {\r\n        this.game = game;\r\n        this.logList = document.querySelector(\"#log-list\");\r\n    }\r\n\r\n    start() {\r\n        this.showLogs();\r\n    }\r\n\r\n    showLogs() {\r\n        let logs = \"\";\r\n\r\n        for (var i = 0; i < Globals.tempLogs.length; i++) {\r\n            logs += \"<li>\" + Globals.tempLogs[i] + \"</li>\";\r\n        }\r\n\r\n        Globals.logs = Globals.tempLogs;\r\n        Globals.tempLogs = [];\r\n\r\n        this.logList.innerHTML = logs;\r\n    }\r\n\r\n    clearLogs() {\r\n        this.logList.innerHTML = '';\r\n    }\r\n}","import { Globals } from './globals.js';\r\nimport { Camp } from './managers/Camp.js';\r\nimport { Events } from './managers/Events.js';\r\nimport { GameOver } from './managers/GameOver.js';\r\nimport { Heal } from './managers/Heal.js';\r\nimport { Hunt } from './managers/Hunt.js';\r\nimport { Report } from './managers/Report.js';\r\nimport { Sleep } from './managers/Sleep.js';\r\nimport { Stats } from './managers/Stats.js';\r\nimport { Travel } from './managers/Travel.js';\r\nimport { Walk } from './managers/Walk.js';\r\nimport { Log } from './managers/Log.js';\r\n\r\nexport class Game {\r\n\r\n    constructor() {\r\n        this.states = Globals.gameStates;\r\n        this.pages = Globals.gamePages;\r\n\r\n        this.camp = new Camp(this);\r\n        this.events = new Events(this);\r\n        this.gameOver = new GameOver(this);\r\n        this.heal = new Heal(this);\r\n        this.hunt = new Hunt(this);\r\n        this.report = new Report(this);\r\n        this.sleep = new Sleep(this);\r\n        this.stats = new Stats(this);\r\n        this.travel = new Travel(this);\r\n        this.walk = new Walk(this);\r\n        this.log = new Log(this);\r\n    }\r\n\r\n    start() {\r\n        var gamePages = Globals.gamePages;\r\n    \r\n        this.hideAllPages();\r\n        this.showPage(gamePages.campPage);\r\n    }\r\n\r\n    onClick(evt) {\r\n        this.goToState(this.states.TRAVEL);\r\n    }\r\n\r\n    goToState(state) {\r\n\r\n        if (!state) throw \"Invalid state!\";\r\n\r\n        Globals.currentState = state;\r\n        this.setState();\r\n    }\r\n\r\n    showPage(page) {\r\n        page.style.display = \"block\";\r\n    }\r\n\r\n    hidePage(page) {\r\n        page.style.display = \"none\";\r\n    }\r\n\r\n    hideAllPages() {\r\n\r\n        var gamePages = Globals.gamePages;\r\n    \r\n        this.hidePage(gamePages.travelPage);\r\n        this.hidePage(gamePages.campPage);\r\n        this.hidePage(gamePages.sleepPage);\r\n        this.hidePage(gamePages.huntPage);\r\n        this.hidePage(gamePages.healPage);\r\n        this.hidePage(gamePages.statsPage);\r\n        this.hidePage(gamePages.eventPage);\r\n        this.hidePage(gamePages.reportPage);\r\n        this.hidePage(gamePages.walkingPage);\r\n        this.hidePage(gamePages.gameOverPage);\r\n    }\r\n\r\n    setState() {\r\n\r\n        const gamePages = Globals.gamePages;\r\n        const gameStates = Globals.gameStates;\r\n\r\n        this.hideAllPages();\r\n\r\n        switch(Globals.currentState) {\r\n            case gameStates.TRAVEL: \r\n                this.showPage(gamePages.travelPage);\r\n                this.travel.start();\r\n            break;\r\n            case gameStates.CAMP: \r\n                this.showPage(gamePages.campPage);\r\n                this.camp.start();\r\n            break;\r\n            case gameStates.SLEEP: \r\n                this.showPage(gamePages.sleepPage);\r\n                // startSleep();\r\n            break;\r\n            case gameStates.HUNT: \r\n                this.showPage(gamePages.huntPage);\r\n                // startHunt();\r\n            break;\r\n            case gameStates.HEAL: \r\n                this.showPage(gamePages.healPage);\r\n                // startHeal();\r\n            break;\r\n            case gameStates.STATS: \r\n                this.showPage(gamePages.statsPage);\r\n                this.stats.start();\r\n            break;\r\n            case gameStates.EVENT: \r\n                this.showPage(gamePages.eventPage);\r\n                this.events.start();\r\n            break;\r\n            case gameStates.WALK:\r\n                this.showPage(gamePages.walkingPage);\r\n                // startWalk();\r\n            break;\r\n            case gameStates.REPORT:\r\n                this.showPage(gamePages.reportPage);\r\n                // startReport();\r\n            break;\r\n            case gameStates.LOG:\r\n                this.log.start();\r\n            break;\r\n            case gameStates.GAME_OVER:\r\n                this.showPage(gamePages.gameOverPage);\r\n                this.gameOver.start();\r\n            break;\r\n        }\r\n    }\r\n}","import { Game } from './Game.js';\r\n\r\nconst game = new Game();\r\ngame.start();\r\n"]}